{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/redux/actions/types.js","webpack:///./src/redux/actions/user.js","webpack:///./src/redux/actions/bots.js","webpack:///./src/redux/actions/index.js","webpack:///./src/components/Spacer/Spacer.jsx","webpack:///./src/components/BotData/BotData.jsx","webpack:///./src/components/BotDisplay/BotDisplay.jsx","webpack:///./src/components/BotList/BotList.jsx","webpack:///./src/containers/AppContainer/AppContainer.jsx","webpack:///./src/containers/AppContainer/index.jsx","webpack:///./src/redux/lib/createReducer.js","webpack:///./src/redux/reducers/user.js","webpack:///./src/redux/reducers/bots.js","webpack:///./src/redux/reducers/index.js","webpack:///./src/redux/store.js","webpack:///./src/index.jsx","webpack:///./src/components/InputField/InputField.less","webpack:///./src/containers/AppContainer/AppContainer.less","webpack:///./src/components/BotList/BotList.less","webpack:///./src/components/BotDisplay/BotDisplay.less","webpack:///./src/components/Spacer/Spacer.less","webpack:///./src/components/BotData/BotData.less"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","SET_USER_OBJECT","SET_USERNAME","SET_BOTS","ADD_BOT","UPDATE_BOT","RUN_TICK","RESET_BOTS","setUserObject","user","type","types","payload","setUsername","asnycDemo","username","dispatch","getState","setTimeout","setBots","bots","addBot","bot","updateBot","id","values","runTick","cb","resetBots","ActionCreators","assign","botsActions","userActions","Spacer","React","Component","react_default","a","createElement","className","style","width","this","props","w","height","h","BotData","title","x","stack","reverse","map","b","BotDisplay","PureComponent","_this","instruction","lines","codeArray","getClassName_default","_styleModuleImportMap","handleMissingStyleName","line","valid","ticks","Spacer_Spacer_Spacer","lib_default","onChange","e","_objectSpread","code","target","codeToLines","BotData_BotData_BotData","isDead","deathMessage","ei","split","trim","toUpperCase","startsWith","cmd","validateLine","cmdArray","validnxp","isNumeric","validxp","validexpression","val","Number","parseFloat","includes","BotList","clearInterval","setInterval","_this2","onClick","doTick","BotDisplay_BotDisplay_BotDisplay","DBotList","connect","state","bindActionCreators","debounceRender","leading","maxWait","defaultCode","AppContainer","withRouter","AppContainer_classCallCheck","AppContainer_possibleConstructorReturn","AppContainer_getPrototypeOf","AppContainer_styleModuleImportMap","components_BotList_BotList","createReducer","initialState","handlers","arguments","undefined","action","user_defineProperty","_createReducer","user_objectSpread","defaultBot","isValid","temp","bots_defineProperty","bots_createReducer","bots_objectSpread","newState","packets","nextId","getNextId","ret","filter","sort","_loop","botCounter","currentLine","find","arr","count","cl","pop","rotateBy","parseInt","Math","floor","jumpBy","console","log","newI","obj","combineReducers","userReducer","botsReducer","loggerMiddleware","createLogger","predicate","enhancer","store","compose","applyMiddleware","thunkMiddleware","createStore","reducer","ReactDOM","render","es","react_router_dom","document","getElementById","InputField","main","codeWrap","lineNum","lineNums","currentIns","error","row","noFlex"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,EAAA,GACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,GAAA,IAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAIA,OAAAD,EAIA,IAAAQ,EAAA,GAKApB,EAAA,CACAqB,EAAA,GAGAZ,EAAA,GAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,GAAA,CACAK,EAAAL,EACAgC,GAAA,EACAF,QAAA,IAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,EAAA,CAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,oBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,YAAA,CAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,cAEA,IAAAC,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAR,KAAA,SAEAU,gmBCtJa0C,EAAkB,kBAClBC,EAAe,eAEfC,EAAW,WACXC,EAAU,UACVC,EAAa,aACbC,EAAW,WACXC,EAAa,aCJnB,SAASC,EAAcC,GAC5B,MAAO,CACLC,KAAMC,EACNC,QAASH,GAIN,SAASI,EAAYrC,GAC1B,MAAO,CACLkC,KAAMC,EACNC,QAASpC,GAKN,SAASsC,EAAUC,GACxB,OAAO,SAACC,EAAUC,GAEhBC,WAAW,WAETF,EAASH,EAAYE,KACpB,MCrBA,SAASI,EAAQC,GACtB,MAAO,CACLV,KAAMC,EACNC,QAASQ,GAIN,SAASC,EAAOC,GACrB,MAAO,CACLZ,KAAMC,EACNC,QAASU,GAIN,SAASC,EAAUC,EAAIC,GAC5B,MAAO,CACLf,KAAMC,EACNC,QAAS,CAAEY,KAAIC,WAIZ,SAASC,EAAQC,GACtB,MAAO,CACLjB,KAAMC,EACNC,QAASe,GAIN,SAASC,IACd,MAAO,CACLlB,KAAMC,GC/BH,IAAMkB,EAAiB/E,OAAOgF,OAAO,GAAIC,EAAaC,q2BCAxCC,gaAAeC,IAAMC,kDAEtC,OACEC,EAAAC,EAAAC,cAAA,OACEC,UAAU,gBACVC,MAAO,CAAEC,MAAOC,KAAKC,MAAMC,GAAK,EAAGC,OAAQH,KAAKC,MAAMG,GAAK,82BCL9CC,gaAAgBb,IAAMC,kDAEvC,IAAIb,EAAMoB,KAAKC,MAAMrB,IACrB,OACEc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAQS,MAAO1B,EAAI2B,GAC/B3B,EAAI2B,IAGTb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAAcS,MAAO1B,EAAI2B,GACrC3B,EAAI4B,MACFlD,QACAmD,UACAC,IAAI,SAACC,EAAG5G,GAAJ,OACH2F,EAAAC,EAAAC,cAAA,OAAK/C,IAAK9C,EAAI,IAAM4G,GAAIA,qpCChBnBC,gaAAmBpB,IAAMqB,sDACnC,IAAAC,EAAAd,KACHpB,EAAMoB,KAAKC,MAAMrB,IACjBmC,EAAcnC,EAAI7E,EAGlBiH,EAAQpC,EAAIqC,UAAUP,IAAI,SAAChF,EAAG3B,GAChC,MAAiB,SAAV2B,EAAEsC,KACP0B,EAAAC,EAAAC,cAAA,OAA2B/C,IAAK,OAAS9C,EAAzC8F,UAAAqB,IAAgB,UAAhBC,EAAA,CAAAC,uBAAA,eAIA1B,EAAAC,EAAAC,cAAA,OAA2B/C,IAAK,OAAS9C,EAAzC8F,UAAAqB,IAAgB,UAAhBC,EAAA,CAAAC,uBAAA,UACG1F,EAAE2F,KACF3F,EAAE4F,OAAS5F,EAAE2F,KAAO,GAAKN,GACxBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAEfnE,EAAE4F,OAAS5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAKlC,OACEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IAAf,QACQjB,EAAIE,GADZ,KACkBkB,KAAKC,MAAMsB,MAD7B,KAGA7B,EAAAC,EAAAC,cAAC4B,EAAD,CAAQpB,EAAG,IAEXV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAYmB,GAC3BtB,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CACE+B,SAAU,SAAAC,GACRb,EAAKb,MAAMpB,UAAUD,EAAIE,qUAAzB8C,CAAA,GACKhD,EADL,CAEEiD,KAAMF,EAAEG,OAAOvF,MACf0E,UAAWc,GAAYJ,EAAEG,OAAOvF,WAGpCsD,UAAU,cACVtD,MAAOqC,EAAIiD,OAEbnC,EAAAC,EAAAC,cAACoC,EAAD,CAASpD,IAAKA,KAEfA,EAAIqD,QAAUvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IAAYjB,EAAIsD,oDAM/C,SAASH,GAAYF,GAC1B,IAAIM,EAAK,EACT,OAAON,EAAKO,MAAM,MAAM1B,IAAI,SAAChF,EAAG3B,GAE9B,MAAS,KADT2B,EAAIA,EAAE2G,OAAOC,gBACE5G,EAAE6G,WAAW,KACnB,CAAEvE,KAAM,SAGV,CAAEA,KAAM,OAAQwE,IAAK9G,EAAG2F,OAD/Bc,EACyCb,MAAOmB,GAAa/G,MAIjE,SAAS+G,GAAapB,GACpB,GAAIA,EAAKpH,OAAS,GAChB,OAAO,EAET,GAAIoH,EAAKkB,WAAW,KAClB,OAAO,EAGT,IA4FeZ,EA5FXe,GADJrB,EAAOA,EAAKe,MAAM,KAAK,GAAGC,QACND,MAAM,KAE1B,GAAmB,QAAfM,EAAS,IAA+B,QAAfA,EAAS,IAA+B,QAAfA,EAAS,GAC7D,OAA0B,GAAnBA,EAASzI,OAGlB,GAAmB,QAAfyI,EAAS,GACX,OAA0B,GAAnBA,EAASzI,OAGlB,GACiB,OAAfyI,EAAS,IACM,QAAfA,EAAS,IACM,QAAfA,EAAS,IACM,QAAfA,EAAS,IACM,QAAfA,EAAS,IACM,QAAfA,EAAS,GACT,CACA,GAAuB,GAAnBA,EAASzI,OACX,OAAO,EAET,GAAwB,IAApByI,EAASzI,OACX,OAAO,EAET,GAAI0I,GAASD,EAAS,IACpB,OAAO,EAIX,GAAmB,QAAfA,EAAS,GAAc,CACzB,GAAwB,IAApBA,EAASzI,OACX,OAAO,EAET,GA4DU,MADG0H,EA3DDe,EAAS,KA4DJE,GAAUjB,GA3DzB,OAAO,EAIX,GAAmB,OAAfe,EAAS,IAA8B,MAAfA,EAAS,GAAY,CAC/C,GAAuB,GAAnBA,EAASzI,OACX,OAAO,EAET,GAAuB,GAAnByI,EAASzI,OACX,MAAsB,KAAfyI,EAAS,GAIpB,GAAmB,QAAfA,EAAS,IACY,GAAnBA,EAASzI,OACX,OAAO,EAIX,GAAmB,QAAfyI,EAAS,IACY,GAAnBA,EAASzI,OACX,OAAO0I,GAASD,EAAS,IAAMA,EAAS,IAG5C,GACiB,QAAfA,EAAS,IACM,QAAfA,EAAS,IACM,QAAfA,EAAS,IACM,QAAfA,EAAS,IACM,QAAfA,EAAS,GACT,CACA,GAAuB,GAAnBA,EAASzI,OACX,OAAO,EAET,GAAwB,IAApByI,EAASzI,OACX,OAAO,EAET,GA4BJ,SAAiB0H,GACf,MAAY,KAALA,GAAiB,QAALA,EA7BbkB,CAAQH,EAAS,IACnB,OAAO,EAIX,MAAmB,QAAfA,EAAS,IAA+B,QAAfA,EAAS,IAA+B,QAAfA,EAAS,GACrC,IAApBA,EAASzI,OAMI,QAAfyI,EAAS,IACY,GAAnBA,EAASzI,QA2BjB,SAAyB0F,EAAGgB,EAAG/E,GAC7B,GAAS,KAAL+E,GAAiB,KAALA,GAAiB,KAALA,EAC1B,OAAOgC,GAAShD,IAAMgD,GAAS/G,GAEjC,OAAO,EA9BIkH,CAAgBJ,EAAS,GAAIA,EAAS,GAAIA,EAAS,IAUhE,SAASC,GAAShB,GAChB,MAAY,KAALA,GAAiB,OAALA,GAAciB,GAAUjB,GAO7C,SAASiB,GAAUG,GACjB,OACEC,OAAOC,WAAWF,KAASA,IAC1BA,EAAIX,MAAM,IAAIc,SAAS,OACvBH,EAAIX,MAAM,IAAIc,SAAS,k1BC7KtBC,oaAAgB3D,IAAMC,kDACjB,IAAAqB,EAAAd,KACPoD,cAAcpD,KAAA,KACdA,KAAA,IAAWqD,YAAY,WACrBvC,EAAKb,MAAMjB,WACV,sCAEI,IAAAsE,EAAAtD,KACP,OACEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UACE2D,QAAS,WACPH,cAAcE,EAAI,KAClBA,EAAKrD,MAAMjB,YAHf,oBAQAU,EAAAC,EAAAC,cAAA,UACE2D,QAAS,WACPD,EAAKE,WAFT,aAOA9D,EAAAC,EAAAC,cAAA,UACE2D,QAAS,WACPH,cAAcE,EAAI,KAClBA,EAAKrD,MAAMf,cAHf,SAQAQ,EAAAC,EAAAC,cAAA,UACE2D,QAAS,WACPD,EAAKrD,MAAMtB,WAFf,eAOAe,EAAAC,EAAAC,cAAC4B,EAAD,CAAQpB,EAAG,KACVhG,OAAO2E,OAAOiB,KAAKC,MAAMvB,KAAKA,MAAMgC,IAAI,SAAAC,GACvC,OACEjB,EAAAC,EAAAC,cAAC6D,EAAD,CACE5G,IAAK8D,EAAE7B,GACPD,UAAWyE,EAAKrD,MAAMpB,UACtBD,IAAK+B,EACLY,MAAOZ,EAAEY,MACTxH,EAAG4G,EAAE5G,8CAmBnB,UAKe2J,GALAC,YAVf,SAAyBC,GACvB,MAAO,CACLlF,KAAMkF,EAAMlF,OAIhB,SAA4BJ,GAC1B,OAAOuF,YAAmB1E,EAAgBb,IAG7BqF,CAGbG,KAAeX,GAAS,IAAO,GAAI,CAAEY,SAAS,EAAMC,QAAS,42BCnE/D,IAAMC,GAAW,+GAoDFC,OC9DAA,OD2BdP,YAyBD,SAAyBC,GACvB,MAAO,CACL7F,KAAM6F,EAAM7F,OAIhB,SAA4BO,GAC1B,OAAOuF,YAAmB1E,EAAgBb,KAjC3C6F,iCAMC,SAAAD,EAAYjE,GAAO,IAAAa,EAAA,mGAAAsD,CAAApE,KAAAkE,IACjBpD,EAAAuD,GAAArE,KAAAsE,GAAAJ,GAAA3J,KAAAyF,KAAMC,KACD2D,MAAQ,GAFI9C,yPADMrB,kEAMvBO,KAAKC,MAAMtB,OAAO,CAChBkD,KAAMoC,GACNhD,UAAWc,GAAYkC,uCAKzB,OACEvE,EAAAC,EAAAC,cAAA,OAAAC,UAAAqB,IAAgB,OAAhBqD,GAAA,CAAAnD,uBAAA,UACE1B,EAAAC,EAAAC,cAAC4E,GAAD,uFEhDO,SAASC,GAAcC,EAAcC,GAClD,OAAO,WAAuC,IAA9Bf,EAA8BgB,UAAA3K,OAAA,QAAA4K,IAAAD,UAAA,GAAAA,UAAA,GAAtBF,EAAcI,EAAQF,UAAA3K,OAAA,EAAA2K,UAAA,QAAAC,EAC5C,OAAIF,EAASrK,eAAewK,EAAO9G,MAC1B2G,EAASG,EAAO9G,MAAM4F,EAAOkB,GAE7BlB,kcCCN,OAAM7F,GAAO0G,GAClB,CAAEpG,SAAU,SADmB0G,GAAAC,GAAA,GAG5B/G,EAH4B,SAGL2F,EAAOkB,GAC7B,OAAAG,GAAA,GAAYH,EAAO5G,WAJQ6G,GAAAC,GAM5B/G,EAN4B,SAMR2F,EAAOkB,GAC1B,OAAAG,GAAA,GAAYrB,EAAZ,CAAmBvF,SAAUyG,EAAO5G,YAPT8G,ocCDjC,IAAIE,GAAa,CACfC,SAAS,EACTjD,aAAc,GACdD,QAAQ,EACR1B,EAAG,IACH6E,MAAM,EACN7D,MAAO,EACPxH,EAAG,GAGQ2E,GAAO+F,GAClB,CAAE/F,KAAM,KADuB2G,GAAAC,GAAA,GAG5BrH,EAH4B,SAGZ2F,EAAOkB,GACtB,OAAAS,GAAA,GAAY3B,EAAZ,CAAmBlF,KAAMoG,EAAO5G,YAJLmH,GAACC,GAM7BrH,EAN4B,SAMV2F,EAAOkB,GACxB,IAAIU,EAAWD,GAAA,GAAK3B,GASpB,OARAxJ,OAAO2E,OAAOyG,EAAS9G,MAAMgC,IAAI,SAAAC,GAC3BA,EAAEyE,YACGI,EAAS9G,KAAKiC,EAAE7B,IAEvB0G,EAAS9G,KAAKiC,EAAE7B,IAAhByG,GAAA,GAA2B5E,EAAMuE,GAAjC,CAA6C1E,MAAO,GAAIiF,QAAS,OAI9DD,IAhBoBH,GAACC,GAkB7BrH,EAlB4B,SAkBb2F,EAAOkB,GACrB,IAAIY,EAASC,GAAU/B,EAAMlF,MAC7B,OAAA6G,GAAA,GACK3B,EADL,CAEElF,KAAM6G,GAAA,GACD3B,EAAMlF,KADP2G,GAAA,GAEDK,EAFCH,GAAA,GAGGL,GAHH,CAIArD,KAAM,GACNZ,UAAW,IACR6D,EAAO5G,QANV,CAOAY,GAAI4G,EACJlF,MAAO,GACPiF,QAAS,WA/BYJ,GAACC,GAoC7BrH,EApC4B,SAoCV2F,EAAOkB,GACxB,OAAAS,GAAA,GACK3B,EADL,CAEElF,KAAM6G,GAAA,GACD3B,EAAMlF,KADP2G,GAAA,GAEDP,EAAO5G,QAAQY,GAFdyG,GAAA,GAGI3B,EAAMlF,KAAKoG,EAAO5G,QAAQY,KAAO,GAClCgG,EAAO5G,QAAQa,cA3CGsG,GAACC,GAgD7BrH,EAhD4B,SAgDZ2F,EAAOkB,GAQtB,IALA,IAAIc,EAAML,GAAA,GAAK3B,GACXlF,EAAOtE,OAAO2E,OAAO6E,EAAMlF,MAC5BmH,OAAO,SAAAlF,GAAC,OAAKA,EAAEsB,SACf6D,KAAK,SAACnG,EAAGgB,GAAJ,OAAUhB,EAAEb,GAAK6B,EAAE7B,KANGiH,EAAA,WAU5B,IAAInH,EAAMF,EAAKsH,GACf,GAAIpH,EAAIqD,OACN,iBAEFrD,EAAI2C,QAGJ,IAAI0E,EAAcrH,EAAIqC,UAAUiF,KAAK,SAAAxK,GAAC,OAAIA,EAAE2F,MAAQzC,EAAI7E,EAAI,IAC5D,IAAKkM,EAOH,OALAL,EAAIlH,KAAKE,EAAIE,IAAbyG,GAAA,GACK3G,EADL,CAEEqD,QAAQ,EACRC,aAAc,yBAEhB,WAEF,IAqbaiE,EAAKC,EArbd1D,EAAWuD,EAAYzD,IAAIJ,MAAM,KAEjCxG,EAAI8G,EAAS,GAMjB,GAJS,QAAL9G,GAAoB,QAALA,GACjBgD,EAAI7E,IAGG,QAAL6B,EAAa,CACf,IAEIF,EAFAC,EAAI+G,EAAS,GASjB,KANAhH,EAAIkD,EAAIqC,UACL4E,OAAO,SAAAQ,GAAE,MAAe,SAAXA,EAAGrI,OAChBkI,KAAK,SAAAG,GACJ,OAAOA,EAAG7D,IAAID,WAAW,QAAU5G,MASrC,OALAiK,EAAIlH,KAAKE,EAAIE,IAAbyG,GAAA,GACK3G,EADL,CAEEqD,QAAQ,EACRC,aAAc,oBAEhB,WAEFtD,EAAI7E,EAAI2B,EAAE2F,KAGZ,GAAS,QAALzF,EAAa,CACf,IAEIF,EAFAC,EAAI+G,EAAS,GASjB,KANAhH,EAAIkD,EAAIqC,UACL4E,OAAO,SAAAQ,GAAE,MAAe,SAAXA,EAAGrI,OAChBkI,KAAK,SAAAG,GACJ,OAAOA,EAAG7D,IAAID,WAAW,QAAU5G,MASrC,OALAiK,EAAIlH,KAAKE,EAAIE,IAAbyG,GAAA,GACK3G,EADL,CAEEqD,QAAQ,EACRC,aAAc,oBAEhB,WAIF,GAAwB,GAApBtD,EAAI4B,MAAMvG,OAKZ,OAFA2E,EAAI7E,EAAI2B,EAAE2F,KACVuE,EAAIlH,KAAKE,EAAIE,IAAMF,EACnB,WAIF,GAAS,GADDA,EAAI4B,MAAM8F,MAIhB,OAFA1H,EAAI7E,EAAI2B,EAAE2F,KACVuE,EAAIlH,KAAKE,EAAIE,IAAMF,EACnB,WAEFA,EAAI7E,IAGN,GAAS,QAAL6B,EAAa,CACf,IAEIF,EAFAC,EAAI+G,EAAS,GASjB,KANAhH,EAAIkD,EAAIqC,UACL4E,OAAO,SAAAQ,GAAE,MAAe,SAAXA,EAAGrI,OAChBkI,KAAK,SAAAG,GACJ,OAAOA,EAAG7D,IAAID,WAAW,QAAU5G,MASrC,OALAiK,EAAIlH,KAAKE,EAAIE,IAAbyG,GAAA,GACK3G,EADL,CAEEqD,QAAQ,EACRC,aAAc,oBAEhB,WAIF,GAAwB,GAApBtD,EAAI4B,MAAMvG,OAKZ,OAHA2E,EAAI7E,IAEJ6L,EAAIlH,KAAKE,EAAIE,IAAMF,EACnB,WAIF,GAAS,GADDA,EAAI4B,MAAM8F,MAIhB,OAFA1H,EAAI7E,EAAI2B,EAAE2F,KACVuE,EAAIlH,KAAKE,EAAIE,IAAMF,EACnB,WAEFA,EAAI7E,IAGN,GAAS,QAAL6B,EAAa,CACf,IAEIF,EAFAC,EAAI+G,EAAS,GASjB,KANAhH,EAAIkD,EAAIqC,UACL4E,OAAO,SAAAQ,GAAE,MAAe,SAAXA,EAAGrI,OAChBkI,KAAK,SAAAG,GACJ,OAAOA,EAAG7D,IAAID,WAAW,QAAU5G,MASrC,OALAiK,EAAIlH,KAAKE,EAAIE,IAAbyG,GAAA,GACK3G,EADL,CAEEqD,QAAQ,EACRC,aAAc,oBAEhB,WAEF,IAAIwD,EAASC,GAAUC,EAAIlH,MAC3BkH,EAAIlH,KAAKgH,GAATH,GAAA,GACKL,GADL,CAEEpG,GAAI4G,EACJlF,MAAO5B,EAAI4B,MAAMlD,QACjBiD,EAAG3B,EAAI2B,EACPxG,EAAG2B,EAAE2F,KACLQ,KAAMjD,EAAIiD,KACV4D,QAAS,GACTL,MAAM,EACNnE,UAAWrC,EAAIqC,UAAU3D,UAE3BsB,EAAI4B,MAAMrG,KAAKuL,GACf9G,EAAI7E,IAGN,GAAS,QAAL6B,EAAa,CACf,GAAIgD,EAAI4B,MAAMvG,OAAS,EAOrB,OANA2E,EAAI7E,IACJ6L,EAAIlH,KAAKE,EAAIE,IAAbyG,GAAA,GACK3G,EADL,CAEEqD,QAAQ,EACRC,aAAc,6BAEhB,WAEF,IAAIvC,EAAIf,EAAI4B,MAAM8F,MACd3F,EAAI/B,EAAI4B,MAAM8F,MAClB1H,EAAI4B,MAAMrG,KAAKwF,GACff,EAAI4B,MAAMrG,KAAKwG,GACf/B,EAAI7E,IAaN,GAVS,QAAL6B,IACiB,KAAf8G,EAAS,IACX9D,EAAI4B,MAAMrG,KAAKyE,EAAI2B,GACnB3B,EAAI7E,MAEJ6E,EAAI4B,MAAMrG,KAAKuI,EAAS,IACxB9D,EAAI7E,MAIC,OAAL6B,EAAY,CACd,GAAwB,GAApBgD,EAAI4B,MAAMvG,OAOZ,OANA2E,EAAI7E,IACJ6L,EAAIlH,KAAKE,EAAIE,IAAbyG,GAAA,GACK3G,EADL,CAEEqD,QAAQ,EACRC,aAAc,oBAEhB,WAEF,IAAIvC,EAAIf,EAAI4B,MAAM8F,MACd5D,EAAS,IAAqB,KAAfA,EAAS,KAC1B9D,EAAI2B,EAAIZ,GAEVf,EAAI7E,IAYN,GATS,MAAL6B,IACE8G,EAAS,IAAqB,KAAfA,EAAS,GAC1B9D,EAAI2B,EAAI3B,EAAIE,GAEZF,EAAI4B,MAAMrG,KAAKyE,EAAIE,IAErBF,EAAI7E,KAGG,QAAL6B,EAAa,CACf,GAAwB,GAApBgD,EAAI4B,MAAMvG,OAOZ,OANA2E,EAAI7E,IACJ6L,EAAIlH,KAAKE,EAAIE,IAAbyG,GAAA,GACK3G,EADL,CAEEqD,QAAQ,EACRC,aAAc,oCAEhB,WAEFtD,EAAI4B,MAAMrG,KAAKyE,EAAI4B,MAAM5B,EAAI4B,MAAMvG,OAAS,IAC5C2E,EAAI7E,IAGN,GAAS,OAAL6B,EAAY,CACd,IAAI2K,EAAW,EAQf,GAPI7D,EAAS,IAAqB,KAAfA,EAAS,KAC1B6D,EAAW3H,EAAI2B,GAEbmC,EAAS,IAAME,GAAUF,EAAS,MACpC6D,EAAWC,SAAS9D,EAAS,MAG1BA,EAAS,GAAI,CAEhB,GAAwB,GAApB9D,EAAI4B,MAAMvG,OAOZ,OANA2E,EAAI7E,IACJ6L,EAAIlH,KAAKE,EAAIE,IAAbyG,GAAA,GACK3G,EADL,CAEEqD,QAAQ,EACRC,aAAc,8BAEhB,WAEFqE,EAAW3H,EAAI4B,MAAM8F,MAEvB,IAAK1D,GAAU2D,GAOb,OANA3H,EAAI7E,IACJ6L,EAAIlH,KAAKE,EAAIE,IAAbyG,GAAA,GACK3G,EADL,CAEEqD,QAAQ,EACRC,aAAc,2BAA6BqE,EAAW,OAExD,WAEF3H,EAAI4B,OA0MO2F,EA1MavH,EAAI4B,MA0MZ4F,EA1MmBG,EA2M3CH,GAASD,EAAIlM,OAASwM,KAAKC,MAAMN,EAAQD,EAAIlM,QAC7CkM,EAAIhM,KAAKS,MAAMuL,EAAKA,EAAIhL,OAAO,EAAGiL,IAC3BD,GA5MCvH,EAAI7E,IAGN,GAAS,QAAL6B,EAAa,CACf,IAAI+K,EAAS,EAQb,GAPIjE,EAAS,IAAqB,KAAfA,EAAS,KAC1BiE,EAAS/H,EAAI2B,GAEXmC,EAAS,IAAME,GAAUF,EAAS,MACpCiE,EAASH,SAAS9D,EAAS,MAGxBA,EAAS,GAAI,CAEhB,GAAwB,GAApB9D,EAAI4B,MAAMvG,OAOZ,OANA2E,EAAI7E,IACJ6L,EAAIlH,KAAKE,EAAIE,IAAbyG,GAAA,GACK3G,EADL,CAEEqD,QAAQ,EACRC,aAAc,8BAEhB,WAEFyE,EAAS/H,EAAI4B,MAAM8F,MAErB,IAAK1D,GAAU+D,GAOb,OANA/H,EAAI7E,IACJ6L,EAAIlH,KAAKE,EAAIE,IAAbyG,GAAA,GACK3G,EADL,CAEEqD,QAAQ,EACRC,aAAc,yBAA2ByE,EAAS,OAEpD,WAEFC,QAAQC,IAAI,UAAWF,GACvB,IAAIG,EAAOlI,EAAI7E,EAAIyM,SAASG,GACxBG,EAAO,IACTA,EAAO,GAETlI,EAAI7E,EAAI+M,EAGV,GAAS,QAALlL,EAAa,CACf,IAAI+K,EAAS,EAQb,GAPIjE,EAAS,IAAqB,KAAfA,EAAS,KAC1BiE,EAAS/H,EAAI2B,GAEXmC,EAAS,IAAME,GAAUF,EAAS,MACpCiE,EAASH,SAAS9D,EAAS,MAGxBA,EAAS,GAAI,CAEhB,GAAwB,GAApB9D,EAAI4B,MAAMvG,OAOZ,OANA2E,EAAI7E,IACJ6L,EAAIlH,KAAKE,EAAIE,IAAbyG,GAAA,GACK3G,EADL,CAEEqD,QAAQ,EACRC,aAAc,8BAEhB,WAEFyE,EAAS/H,EAAI4B,MAAM8F,MAErB,IAAK1D,GAAU+D,GAOb,OANA/H,EAAI7E,IACJ6L,EAAIlH,KAAKE,EAAIE,IAAbyG,GAAA,GACK3G,EADL,CAEEqD,QAAQ,EACRC,aAAc,yBAA2ByE,EAAS,OAEpD,WAEFC,QAAQC,IAAI,UAAWF,GACnBA,EAAS,IACXA,EAAS,GAEX/H,EAAI7E,EAAIyM,SAASG,GAAU,EAG7B,GAAS,QAAL/K,GAAoB,QAALA,GAAoB,QAALA,GAAoB,QAALA,EAAa,CAC5D,GAAIgD,EAAI4B,MAAMvG,OAAS,EAOrB,OANA2E,EAAI7E,IACJ6L,EAAIlH,KAAKE,EAAIE,IAAbyG,GAAA,GACK3G,EADL,CAEEqD,QAAQ,EACRC,aAAc,gDAEhB,WAEF,IAAIvC,EAAIf,EAAI4B,MAAM8F,MACd3F,EAAI/B,EAAI4B,MAAM8F,MAElB,IAAK1D,GAAUjD,KAAOiD,GAAUjC,GAO9B,OANA/B,EAAI7E,IACJ6L,EAAIlH,KAAKE,EAAIE,IAAbyG,GAAA,GACK3G,EADL,CAEEqD,QAAQ,EACRC,aAAc,8BAEhB,WAEFvC,EAAI6G,SAAS7G,GACbgB,EAAI6F,SAAS7F,GACJ,QAAL/E,IACFgD,EAAI4B,MAAMrG,KAAKwF,EAAIgB,GACnB/B,EAAI7E,KAGG,QAAL6B,IACFgD,EAAI4B,MAAMrG,KAAKwF,EAAIgB,GACnB/B,EAAI7E,KAGG,QAAL6B,IACFgD,EAAI4B,MAAMrG,KAAKwF,EAAIgB,GACnB/B,EAAI7E,KAGG,QAAL6B,IACFgD,EAAI4B,MAAMrG,KAAKsM,KAAKC,MAAM/G,EAAIgB,IAC9B/B,EAAI7E,KAIR6L,EAAIlH,KAAKE,EAAIE,IAAMF,GA5XZoH,EAAa,EAAGA,EAAatH,EAAKzE,OAAQ+L,IAAcD,IAgYjE,OAAOH,IAxboBN,KA6bjC,SAASK,GAAUoB,GAEjB,IADA,IAAIhN,EAAI,IACE,CACR,IAAKgN,EAAIhN,GACP,OAAOA,EAETA,KAIJ,SAAS6I,GAAUG,GACjB,MAAkB,iBAAPA,GAITC,OAAOC,WAAWF,KAASA,IAC1BA,EAAIX,MAAM,IAAIc,SAAS,OACvBH,EAAIX,MAAM,IAAIc,SAAS,KCxdb8D,mBAAgB5M,OAAOgF,OAAO,GAAI6H,EAAaC,ICCxDC,GAAmBC,wBAAa,CACpCC,UAAW,SAAC9I,EAAUuG,GAAX,OAAsB,KASnC,IAN0BJ,GACpB4C,GCFS7H,GDSA8H,IARW7C,GAMG,GALvB4C,GAAWE,YAAQC,YAAgBC,KAAiBP,KAC5CQ,YAAYC,GAASlD,GAAc4C,KCHlC7H,GAWRyE,GAVL2D,IAASC,OACPpI,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAUR,MAAOA,IACf7H,EAAAC,EAAAC,cAACoI,GAAA,EAAD,KACEtI,EAAAC,EAAAC,cAACH,GAAD,QAGJwI,SAASC,eAAe,2BCf5BzM,EAAAD,QAAA,CAAkB2M,WAAA,wCCAlB1M,EAAAD,QAAA,CAAkB4M,KAAA,kCCAlB3M,EAAAD,QAAA,CAAkB2H,QAAA,qCCAlB1H,EAAAD,QAAA,CAAkBoF,WAAA,oBAAAiB,KAAA,cAAAwG,SAAA,kBAAAC,QAAA,iBAAAC,SAAA,kBAAAC,WAAA,oBAAAC,MAAA,mCCAlBhN,EAAAD,QAAA,CAAkB+D,OAAA,oCCAlB9D,EAAAD,QAAA,CAAkB6E,QAAA,iBAAAqI,IAAA,aAAAC,OAAA,gBAAA9L,IAAA,aAAAN,MAAA,eAAAiE,MAAA","file":"js/main-f6ce82e939c24a168da7.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/stackbots/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([152,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","//Action types\nexport const SET_USER_OBJECT = \"SET_USER_OBJECT\";\nexport const SET_USERNAME = \"SET_USERNAME\";\n\nexport const SET_BOTS = \"SET_BOTS\";\nexport const ADD_BOT = \"ADD_BOT\";\nexport const UPDATE_BOT = \"UPDATE_BOT\";\nexport const RUN_TICK = \"RUN_TICK\";\nexport const RESET_BOTS = \"RESET_BOTS\";\n","import * as types from \"./types\";\n\n//We have to define action types in types.js, here we make them available as functions that can be mapped to props.\n\nexport function setUserObject(user) {\n  return {\n    type: types.SET_USER_OBJECT,\n    payload: user\n  };\n}\n\nexport function setUsername(name) {\n  return {\n    type: types.SET_USERNAME,\n    payload: name\n  };\n}\n\n// asnyc function\nexport function asnycDemo(username) {\n  return (dispatch, getState) => {\n    //fetch some data for example\n    setTimeout(() => {\n      // Dispatch redux function:\n      dispatch(setUsername(username));\n    }, 1000);\n  };\n}\n","import * as types from \"./types\";\n\n//We have to define action types in types.js, here we make them available as functions that can be mapped to props.\n\nexport function setBots(bots) {\n  return {\n    type: types.SET_BOTS,\n    payload: bots\n  };\n}\n\nexport function addBot(bot) {\n  return {\n    type: types.ADD_BOT,\n    payload: bot\n  };\n}\n\nexport function updateBot(id, values) {\n  return {\n    type: types.UPDATE_BOT,\n    payload: { id, values }\n  };\n}\n\nexport function runTick(cb) {\n  return {\n    type: types.RUN_TICK,\n    payload: cb\n  };\n}\n\nexport function resetBots() {\n  return {\n    type: types.RESET_BOTS\n  };\n}\n","import * as userActions from \"./user\";\nimport * as botsActions from \"./bots\";\n\nexport const ActionCreators = Object.assign({}, botsActions, userActions);\n","import React from \"react\";\nimport style from \"./Spacer.less\";\n\nexport default class Spacer extends React.Component {\n  render() {\n    return (\n      <div\n        styleName=\"Spacer\"\n        style={{ width: this.props.w || 0, height: this.props.h || 0 }}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport style from \"./BotData.less\";\n\nexport default class BotData extends React.Component {\n  render() {\n    let bot = this.props.bot;\n    return (\n      <div styleName=\"BotData\">\n        <div styleName=\"row\">\n          <div styleName=\"key\">X</div>\n          <div styleName=\"value\" title={bot.x}>\n            {bot.x}\n          </div>\n        </div>\n        <div styleName=\"row noFlex\">\n          <div styleName=\"key\">Stack</div>\n          <div styleName=\"stack value\" title={bot.x}>\n            {bot.stack\n              .slice()\n              .reverse()\n              .map((b, i) => (\n                <div key={i + \":\" + b}>{b}</div>\n              ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport style from \"./BotDisplay.less\";\nimport Spacer from \"../Spacer/Spacer\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport BotData from \"../BotData/BotData\";\nexport default class BotDisplay extends React.PureComponent {\n  render() {\n    let bot = this.props.bot;\n    let instruction = bot.i;\n\n    //console.log(lines);\n    let lines = bot.codeArray.map((l, i) => {\n      return l.type == \"blank\" ? (\n        <div styleName={\"lineNum\"} key={\"line\" + i}>\n          &nbsp;\n        </div>\n      ) : (\n        <div styleName={\"lineNum\"} key={\"line\" + i}>\n          {l.line}\n          {l.valid && l.line - 1 == instruction && (\n            <div styleName=\"currentIns\" />\n          )}\n          {!l.valid && <div styleName=\"error\" />}\n        </div>\n      );\n    });\n\n    return (\n      <div styleName=\"BotDisplay\">\n        <div styleName=\"title\">\n          Bot #{bot.id} ({this.props.ticks})\n        </div>\n        <Spacer h={4} />\n\n        <div styleName=\"codeWrap\">\n          <div styleName=\"lineNums\">{lines}</div>\n          <TextareaAutosize\n            onChange={e => {\n              this.props.updateBot(bot.id, {\n                ...bot,\n                code: e.target.value,\n                codeArray: codeToLines(e.target.value)\n              });\n            }}\n            styleName=\"code\"\n            value={bot.code}\n          />\n          <BotData bot={bot} />\n        </div>\n        {bot.isDead && <div styleName=\"deathMsg\">{bot.deathMessage}</div>}\n      </div>\n    );\n  }\n}\n\nexport function codeToLines(code) {\n  let ei = 0;\n  return code.split(\"\\n\").map((l, i) => {\n    l = l.trim().toUpperCase();\n    if (l == \"\" || l.startsWith(\";\")) {\n      return { type: \"blank\" };\n    }\n    ei++;\n    return { type: \"code\", cmd: l, line: ei, valid: validateLine(l) };\n  });\n}\n\nfunction validateLine(line) {\n  if (line.length > 20) {\n    return false;\n  }\n  if (line.startsWith(\";\")) {\n    return true;\n  }\n  line = line.split(\";\")[0].trim();\n  let cmdArray = line.split(\" \");\n\n  if (cmdArray[0] == \"NOOP\" || cmdArray[0] == \"DUPL\" || cmdArray[0] == \"FLIP\") {\n    return cmdArray.length == 1;\n  }\n\n  if (cmdArray[0] == \"REPL\") {\n    return cmdArray.length == 2;\n  }\n\n  if (\n    cmdArray[0] == \"ROT\" ||\n    cmdArray[0] == \"RJMP\" ||\n    cmdArray[0] == \"AJMP\" ||\n    cmdArray[0] == \"SUBM\" ||\n    cmdArray[0] == \"WALK\" ||\n    cmdArray[0] == \"WAIT\"\n  ) {\n    if (cmdArray.length == 1) {\n      return true;\n    }\n    if (cmdArray.length !== 2) {\n      return false;\n    }\n    if (validnxp(cmdArray[1])) {\n      return true;\n    }\n  }\n\n  if (cmdArray[0] == \"PUSH\") {\n    if (cmdArray.length !== 2) {\n      return false;\n    }\n    if (validnx(cmdArray[1])) {\n      return true;\n    }\n  }\n\n  if (cmdArray[0] == \"POP\" || cmdArray[0] == \"IP\") {\n    if (cmdArray.length == 1) {\n      return true;\n    }\n    if (cmdArray.length == 2) {\n      return cmdArray[1] == \"X\";\n    }\n  }\n\n  if (cmdArray[0] == \"MARK\") {\n    if (cmdArray.length == 2) {\n      return true;\n    }\n  }\n\n  if (cmdArray[0] == \"SEND\") {\n    if (cmdArray.length == 3) {\n      return validnxp(cmdArray[1] && cmdArray[2]);\n    }\n  }\n  if (\n    cmdArray[0] == \"RECV\" ||\n    cmdArray[0] == \"ADDI\" ||\n    cmdArray[0] == \"SUBI\" ||\n    cmdArray[0] == \"MULI\" ||\n    cmdArray[0] == \"DIVI\"\n  ) {\n    if (cmdArray.length == 1) {\n      return true;\n    }\n    if (cmdArray.length !== 2) {\n      return false;\n    }\n    if (validxp(cmdArray[1])) {\n      return true;\n    }\n  }\n\n  if (cmdArray[0] == \"JUMP\" || cmdArray[0] == \"TJMP\" || cmdArray[0] == \"FJMP\") {\n    if (cmdArray.length !== 2) {\n      return false;\n    }\n    return true;\n  }\n\n  if (cmdArray[0] == \"TEST\") {\n    if (cmdArray.length == 4) {\n      return validexpression(cmdArray[1], cmdArray[2], cmdArray[3]);\n    }\n  }\n\n  return false;\n}\n\nfunction validnx(e) {\n  return e == \"X\" || isNumeric(e);\n}\nfunction validnxp(e) {\n  return e == \"X\" || e == \"POP\" || isNumeric(e);\n}\n\nfunction validxp(e) {\n  return e == \"X\" || e == \"PUSH\";\n}\n\nfunction isNumeric(val) {\n  return (\n    Number(parseFloat(val)) == val &&\n    !val.split(\"\").includes(\"E\") &&\n    !val.split(\"\").includes(\".\")\n  );\n}\n\nfunction validexpression(a, b, c) {\n  if (b == \">\" || b == \"<\" || b == \"=\") {\n    return validnxp(a) && validnxp(c);\n  }\n  return false;\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ActionCreators } from \"redux/actions\";\nimport { bindActionCreators } from \"redux\";\nimport style from \"./BotList.less\";\nimport BotDisplay from \"../BotDisplay/BotDisplay\";\nimport Spacer from \"../Spacer/Spacer\";\n\nimport debounceRender from \"react-debounce-render\";\nclass BotList extends React.Component {\n  doTick() {\n    clearInterval(this.int);\n    this.int = setInterval(() => {\n      this.props.runTick();\n    }, 1000 / 10);\n  }\n  render() {\n    return (\n      <div styleName=\"BotList\">\n        <button\n          onClick={() => {\n            clearInterval(this.int);\n            this.props.runTick();\n          }}\n        >\n          Run tick / Pause\n        </button>\n        <button\n          onClick={() => {\n            this.doTick();\n          }}\n        >\n          Run ticks\n        </button>\n        <button\n          onClick={() => {\n            clearInterval(this.int);\n            this.props.resetBots();\n          }}\n        >\n          Reset\n        </button>\n        <button\n          onClick={() => {\n            this.props.addBot();\n          }}\n        >\n          Add new bot\n        </button>\n        <Spacer h={12} />\n        {Object.values(this.props.bots.bots).map(b => {\n          return (\n            <BotDisplay\n              key={b.id}\n              updateBot={this.props.updateBot}\n              bot={b}\n              ticks={b.ticks}\n              i={b.i}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    bots: state.bots\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(ActionCreators, dispatch);\n}\n\nlet DBotList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(debounceRender(BotList, 1000 / 60, { leading: true, maxWait: 1000 / 8 }));\n\nexport default DBotList;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ActionCreators } from \"redux/actions\";\nimport { bindActionCreators } from \"redux\";\n\nimport InputField from \"components/InputField\";\nimport style from \"./AppContainer.less\";\n\nimport { Route, Link, withRouter, Switch, Redirect } from \"react-router-dom\";\nimport BotList from \"../../components/BotList/BotList\";\nimport { codeToLines } from \"../../components/BotDisplay/BotDisplay\";\n\nconst defaultCode = `;FIBONACCI\nPUSH 0\nDUPL\nPOP X\nPUSH 1\n\nMARK LOOP\nDUPL\nPUSH X\nADDI\nFLIP\nDUPL\nPOP X\nFLIP\nJUMP LOOP`;\n\n@withRouter\n@connect(\n  mapStateToProps,\n  mapDispatchToProps\n)\nclass AppContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    this.props.addBot({\n      code: defaultCode,\n      codeArray: codeToLines(defaultCode)\n    });\n  }\n\n  render() {\n    return (\n      <div styleName={\"main\"}>\n        <BotList />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(ActionCreators, dispatch);\n}\n\nexport default AppContainer;\n","\nimport AppContainer from './AppContainer';\nexport default AppContainer;\n","export default function createReducer(initialState, handlers) {\n  return function(state = initialState, action) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action);\n    } else {\n      return state;\n    }\n  };\n}\n","//Reducers: Manages data, state\nimport createReducer from \"../lib/createReducer\";\nimport * as types from \"../actions/types\";\nimport { combineReducers } from \"redux\";\n\n//Define name and default value\nexport const user = createReducer(\n  { username: \"Anon\" },\n  {\n    [types.SET_USER_OBJECT](state, action) {\n      return { ...action.payload };\n    },\n    [types.SET_USERNAME](state, action) {\n      return { ...state, username: action.payload };\n    }\n  }\n);\n","//Reducers: Manages data, state\nimport createReducer from \"../lib/createReducer\";\nimport * as types from \"../actions/types\";\nimport { combineReducers } from \"redux\";\n\nlet defaultBot = {\n  isValid: true,\n  deathMessage: \"\",\n  isDead: false,\n  x: \"a\",\n  temp: false,\n  ticks: 0,\n  i: 0\n};\n//Define name and default value\nexport const bots = createReducer(\n  { bots: {} },\n  {\n    [types.SET_BOTS](state, action) {\n      return { ...state, bots: action.payload };\n    },\n    [types.RESET_BOTS](state, action) {\n      let newState = { ...state };\n      Object.values(newState.bots).map(b => {\n        if (b.temp) {\n          delete newState.bots[b.id];\n        } else {\n          newState.bots[b.id] = { ...b, ...defaultBot, stack: [], packets: [] };\n        }\n      });\n\n      return newState;\n    },\n    [types.ADD_BOT](state, action) {\n      let nextId = getNextId(state.bots);\n      return {\n        ...state,\n        bots: {\n          ...state.bots,\n          [nextId]: {\n            ...defaultBot,\n            code: \"\",\n            codeArray: [],\n            ...action.payload,\n            id: nextId,\n            stack: [],\n            packets: []\n          }\n        }\n      };\n    },\n    [types.UPDATE_BOT](state, action) {\n      return {\n        ...state,\n        bots: {\n          ...state.bots,\n          [action.payload.id]: {\n            ...(state.bots[action.payload.id] || {}),\n            ...action.payload.values\n          }\n        }\n      };\n    },\n    [types.RUN_TICK](state, action) {\n      //console.time(\"tick\")\n      //for each bot, ordered by id(?) , run next instruction.\n      let ret = { ...state };\n      let bots = Object.values(state.bots)\n        .filter(b => !b.isDead)\n        .sort((a, b) => a.id - b.id);\n      //console.log(bots);\n      for (var botCounter = 0; botCounter < bots.length; botCounter++) {\n        //console.log(\"running bot\", botCounter);\n        let bot = bots[botCounter];\n        if (bot.isDead) {\n          continue;\n        }\n        bot.ticks++;\n        //console.log(bot);\n        // current task:\n        let currentLine = bot.codeArray.find(l => l.line == bot.i + 1);\n        if (!currentLine) {\n          //kill bot.\n          ret.bots[bot.id] = {\n            ...bot,\n            isDead: true,\n            deathMessage: \"Out of instructions.\"\n          };\n          continue;\n        }\n        let cmdArray = currentLine.cmd.split(\" \");\n\n        let c = cmdArray[0];\n\n        if (c == \"NOOP\" || c == \"MARK\") {\n          bot.i++;\n        }\n\n        if (c == \"JUMP\") {\n          let m = cmdArray[1];\n          //find line;\n          let l = null;\n          l = bot.codeArray\n            .filter(cl => cl.type != \"blank\")\n            .find(cl => {\n              return cl.cmd.startsWith(\"MARK \" + m);\n            });\n          //console.log(\"FOUND JUMP!\", l);\n          if (!l) {\n            ret.bots[bot.id] = {\n              ...bot,\n              isDead: true,\n              deathMessage: \"MARK not found.\"\n            };\n            continue;\n          }\n          bot.i = l.line;\n        }\n\n        if (c == \"FJMP\") {\n          let m = cmdArray[1];\n          //find line;\n          let l = null;\n          l = bot.codeArray\n            .filter(cl => cl.type != \"blank\")\n            .find(cl => {\n              return cl.cmd.startsWith(\"MARK \" + m);\n            });\n          //console.log(\"FOUND JUMP!\", l);\n          if (!l) {\n            ret.bots[bot.id] = {\n              ...bot,\n              isDead: true,\n              deathMessage: \"MARK not found.\"\n            };\n            continue;\n          }\n\n          //pop the stack, if it's a 0, jump, else, dont.\n          if (bot.stack.length == 0) {\n            //do jump\n\n            bot.i = l.line;\n            ret.bots[bot.id] = bot;\n            continue;\n          }\n\n          let a = bot.stack.pop();\n          if (a == 0) {\n            bot.i = l.line;\n            ret.bots[bot.id] = bot;\n            continue;\n          }\n          bot.i++;\n        }\n\n        if (c == \"TJMP\") {\n          let m = cmdArray[1];\n          //find line;\n          let l = null;\n          l = bot.codeArray\n            .filter(cl => cl.type != \"blank\")\n            .find(cl => {\n              return cl.cmd.startsWith(\"MARK \" + m);\n            });\n          //console.log(\"FOUND JUMP!\", l);\n          if (!l) {\n            ret.bots[bot.id] = {\n              ...bot,\n              isDead: true,\n              deathMessage: \"MARK not found.\"\n            };\n            continue;\n          }\n\n          //if there's no stack, don't jump\n          if (bot.stack.length == 0) {\n            //dont jump\n            bot.i++;\n\n            ret.bots[bot.id] = bot;\n            continue;\n          }\n\n          let a = bot.stack.pop();\n          if (a != 0) {\n            bot.i = l.line;\n            ret.bots[bot.id] = bot;\n            continue;\n          }\n          bot.i++;\n        }\n\n        if (c == \"REPL\") {\n          let m = cmdArray[1];\n          //find line;\n          let l = null;\n          l = bot.codeArray\n            .filter(cl => cl.type != \"blank\")\n            .find(cl => {\n              return cl.cmd.startsWith(\"MARK \" + m);\n            });\n          //console.log(\"FOUND JUMP!\", l);\n          if (!l) {\n            ret.bots[bot.id] = {\n              ...bot,\n              isDead: true,\n              deathMessage: \"MARK not found.\"\n            };\n            continue;\n          }\n          let nextId = getNextId(ret.bots);\n          ret.bots[nextId] = {\n            ...defaultBot,\n            id: nextId,\n            stack: bot.stack.slice(),\n            x: bot.x,\n            i: l.line,\n            code: bot.code,\n            packets: [],\n            temp: true,\n            codeArray: bot.codeArray.slice()\n          };\n          bot.stack.push(nextId);\n          bot.i++;\n        }\n\n        if (c == \"FLIP\") {\n          if (bot.stack.length < 2) {\n            bot.i++;\n            ret.bots[bot.id] = {\n              ...bot,\n              isDead: true,\n              deathMessage: \"Stack too short to flip.\"\n            };\n            continue;\n          }\n          let a = bot.stack.pop();\n          let b = bot.stack.pop();\n          bot.stack.push(a);\n          bot.stack.push(b);\n          bot.i++;\n        }\n\n        if (c == \"PUSH\") {\n          if (cmdArray[1] == \"X\") {\n            bot.stack.push(bot.x);\n            bot.i++;\n          } else {\n            bot.stack.push(cmdArray[1]);\n            bot.i++;\n          }\n        }\n\n        if (c == \"POP\") {\n          if (bot.stack.length == 0) {\n            bot.i++;\n            ret.bots[bot.id] = {\n              ...bot,\n              isDead: true,\n              deathMessage: \"Nothing to pop.\"\n            };\n            continue;\n          }\n          let a = bot.stack.pop();\n          if (cmdArray[1] && cmdArray[1] == \"X\") {\n            bot.x = a;\n          }\n          bot.i++;\n        }\n\n        if (c == \"IP\") {\n          if (cmdArray[1] && cmdArray[1] == \"X\") {\n            bot.x = bot.id;\n          } else {\n            bot.stack.push(bot.id);\n          }\n          bot.i++;\n        }\n\n        if (c == \"DUPL\") {\n          if (bot.stack.length == 0) {\n            bot.i++;\n            ret.bots[bot.id] = {\n              ...bot,\n              isDead: true,\n              deathMessage: \"Can't duplicate on empty stack.\"\n            };\n            continue;\n          }\n          bot.stack.push(bot.stack[bot.stack.length - 1]);\n          bot.i++;\n        }\n\n        if (c == \"ROT\") {\n          let rotateBy = 0;\n          if (cmdArray[1] && cmdArray[1] == \"X\") {\n            rotateBy = bot.x;\n          }\n          if (cmdArray[1] && isNumeric(cmdArray[1])) {\n            rotateBy = parseInt(cmdArray[1]);\n          }\n\n          if (!cmdArray[1]) {\n            //take value from stack.\n            if (bot.stack.length == 0) {\n              bot.i++;\n              ret.bots[bot.id] = {\n                ...bot,\n                isDead: true,\n                deathMessage: \"Treid to pop empty stack.\"\n              };\n              continue;\n            }\n            rotateBy = bot.stack.pop();\n          }\n          if (!isNumeric(rotateBy)) {\n            bot.i++;\n            ret.bots[bot.id] = {\n              ...bot,\n              isDead: true,\n              deathMessage: \"Can't rotate by string (\" + rotateBy + \").\"\n            };\n            continue;\n          }\n          bot.stack = arrayRotate(bot.stack, rotateBy);\n          bot.i++;\n        }\n\n        if (c == \"RJMP\") {\n          let jumpBy = 0;\n          if (cmdArray[1] && cmdArray[1] == \"X\") {\n            jumpBy = bot.x;\n          }\n          if (cmdArray[1] && isNumeric(cmdArray[1])) {\n            jumpBy = parseInt(cmdArray[1]);\n          }\n\n          if (!cmdArray[1]) {\n            //take value from stack.\n            if (bot.stack.length == 0) {\n              bot.i++;\n              ret.bots[bot.id] = {\n                ...bot,\n                isDead: true,\n                deathMessage: \"Treid to pop empty stack.\"\n              };\n              continue;\n            }\n            jumpBy = bot.stack.pop();\n          }\n          if (!isNumeric(jumpBy)) {\n            bot.i++;\n            ret.bots[bot.id] = {\n              ...bot,\n              isDead: true,\n              deathMessage: \"Can't jump by string (\" + jumpBy + \").\"\n            };\n            continue;\n          }\n          console.log(\"JUMPING\", jumpBy);\n          let newI = bot.i + parseInt(jumpBy);\n          if (newI < 0) {\n            newI = 0;\n          }\n          bot.i = newI;\n        }\n\n        if (c == \"AJMP\") {\n          let jumpBy = 0;\n          if (cmdArray[1] && cmdArray[1] == \"X\") {\n            jumpBy = bot.x;\n          }\n          if (cmdArray[1] && isNumeric(cmdArray[1])) {\n            jumpBy = parseInt(cmdArray[1]);\n          }\n\n          if (!cmdArray[1]) {\n            //take value from stack.\n            if (bot.stack.length == 0) {\n              bot.i++;\n              ret.bots[bot.id] = {\n                ...bot,\n                isDead: true,\n                deathMessage: \"Treid to pop empty stack.\"\n              };\n              continue;\n            }\n            jumpBy = bot.stack.pop();\n          }\n          if (!isNumeric(jumpBy)) {\n            bot.i++;\n            ret.bots[bot.id] = {\n              ...bot,\n              isDead: true,\n              deathMessage: \"Can't jump by string (\" + jumpBy + \").\"\n            };\n            continue;\n          }\n          console.log(\"JUMPING\", jumpBy);\n          if (jumpBy < 1) {\n            jumpBy = 1;\n          }\n          bot.i = parseInt(jumpBy) - 1;\n        }\n\n        if (c == \"MULI\" || c == \"ADDI\" || c == \"SUBI\" || c == \"DIVI\") {\n          if (bot.stack.length < 2) {\n            bot.i++;\n            ret.bots[bot.id] = {\n              ...bot,\n              isDead: true,\n              deathMessage: \"Not enough values on the stack to do maths.\"\n            };\n            continue;\n          }\n          let a = bot.stack.pop();\n          let b = bot.stack.pop();\n\n          if (!isNumeric(a) || !isNumeric(b)) {\n            bot.i++;\n            ret.bots[bot.id] = {\n              ...bot,\n              isDead: true,\n              deathMessage: \"Can't do math on strings.\"\n            };\n            continue;\n          }\n          a = parseInt(a);\n          b = parseInt(b);\n          if (c == \"MULI\") {\n            bot.stack.push(a * b);\n            bot.i++;\n          }\n\n          if (c == \"ADDI\") {\n            bot.stack.push(a + b);\n            bot.i++;\n          }\n\n          if (c == \"SUBI\") {\n            bot.stack.push(a - b);\n            bot.i++;\n          }\n\n          if (c == \"DIVI\") {\n            bot.stack.push(Math.floor(a / b));\n            bot.i++;\n          }\n        }\n\n        ret.bots[bot.id] = bot;\n      }\n\n      //console.timeEnd(\"tick\")\n      return ret;\n    }\n  }\n);\n\nfunction getNextId(obj) {\n  let i = 0;\n  while (1) {\n    if (!obj[i]) {\n      return i;\n    }\n    i++;\n  }\n}\n\nfunction isNumeric(val) {\n  if (typeof val == \"number\") {\n    return true;\n  }\n  return (\n    Number(parseFloat(val)) == val &&\n    !val.split(\"\").includes(\"E\") &&\n    !val.split(\"\").includes(\".\")\n  );\n}\n\n/*\nInstructions:\n\nIP\n//test EXPRESSION\n//subm num/x/pop\n?//send data=num/x/pop ip=num/x/pop\n//recv x/blank\n//walk num/x/pop\n?//wait num/x/pop\n\nEXPRESSION:\npop<pop\npop>pop\npop=pop\nx|pop\n\n\n\n##//flip\n##//noop\n##//mark NAME\n\n#//rot num/x/pop\n#//rjmp num/x/pop\n#//ajmp num/x/pop\n\n##//addi \n##//subi \n##//muli \n##//divi \n\n##//jump mark\n##//tjmp mark\n##//fjmp mark\n\n##// push num/x\n##// pop x|blank\n\n##// DUPL\n\n\n\n##//repl num/x/pop\n*/\n\nfunction arrayRotate(arr, count) {\n  count -= arr.length * Math.floor(count / arr.length);\n  arr.push.apply(arr, arr.splice(0, count));\n  return arr;\n}\n","import { combineReducers } from \"redux\";\n\nimport * as userReducer from \"./user\";\nimport * as botsReducer from \"./bots\";\n\nexport default combineReducers(Object.assign({}, userReducer, botsReducer));\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\n\nimport reducer from \"./reducers\";\n\nconst loggerMiddleware = createLogger({\n  predicate: (getState, action) => !true\n});\n\nfunction configureStorage(initialState) {\n  let enhancer = compose(applyMiddleware(thunkMiddleware, loggerMiddleware));\n  let store = createStore(reducer, initialState, enhancer);\n  return store;\n}\n\nlet store = configureStorage({});\n\nexport default store;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport AppContainer from \"./containers/AppContainer\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\n\nconst render = Component => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <Component />\n      </Router>\n    </Provider>,\n    document.getElementById(\"app\")\n  );\n};\n\nrender(AppContainer);\n\nif (module.hot) {\n  module.hot.accept(\"./containers/AppContainer\", () => {\n    var NextRootContainer = require(\"./containers/AppContainer\").default;\n    render(NextRootContainer);\n  });\n}\n","// removed by extract-text-webpack-plugin\nmodule.exports = {\"InputField\":\"InputField__2iVjL\"};","// removed by extract-text-webpack-plugin\nmodule.exports = {\"main\":\"main__1Qz2V\"};","// removed by extract-text-webpack-plugin\nmodule.exports = {\"BotList\":\"BotList__2ut7p\"};","// removed by extract-text-webpack-plugin\nmodule.exports = {\"BotDisplay\":\"BotDisplay__ORyTn\",\"code\":\"code__xeD25\",\"codeWrap\":\"codeWrap__2bNcI\",\"lineNum\":\"lineNum__3PcSy\",\"lineNums\":\"lineNums__1STtN\",\"currentIns\":\"currentIns__1I8GG\",\"error\":\"error__1Pbcj\"};","// removed by extract-text-webpack-plugin\nmodule.exports = {\"Spacer\":\"Spacer__mCvPQ\"};","// removed by extract-text-webpack-plugin\nmodule.exports = {\"BotData\":\"BotData__2adJ-\",\"row\":\"row__hobll\",\"noFlex\":\"noFlex__2Y1Lu\",\"key\":\"key__3Tu1C\",\"value\":\"value__1LF1j\",\"stack\":\"stack__1Kz6o\"};"],"sourceRoot":""}