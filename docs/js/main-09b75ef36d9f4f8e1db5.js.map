{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./standalone/world.js","webpack:///./standalone/cpu.js","webpack:///./standalone/instructions.js","webpack:///./src/redux/actions/types.js","webpack:///./src/redux/actions/user.js","webpack:///./src/redux/actions/bots.js","webpack:///./src/redux/actions/index.js","webpack:///./src/components/Spacer/Spacer.jsx","webpack:///./src/components/BotData/BotData.jsx","webpack:///./src/components/BotDisplay/BotDisplay.jsx","webpack:///./src/components/BotList/BotList.jsx","webpack:///./src/containers/AppContainer/AppContainer.jsx","webpack:///./src/containers/AppContainer/index.jsx","webpack:///./src/redux/lib/createReducer.js","webpack:///./src/redux/reducers/user.js","webpack:///./src/redux/reducers/bots.js","webpack:///./src/redux/reducers/index.js","webpack:///./src/redux/store.js","webpack:///./src/index.jsx","webpack:///./src/components/InputField/InputField.less","webpack:///./src/containers/AppContainer/AppContainer.less","webpack:///./src/components/BotList/BotList.less","webpack:///./src/components/BotDisplay/BotDisplay.less","webpack:///./src/components/Spacer/Spacer.less","webpack:///./src/components/BotData/BotData.less"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","CPU","require","World","_ref","code","_classCallCheck","this","bots","id","botCount","runTick","_objectSpread","find","b","updateCode","filter","isTemp","map","resetBot","instructions","room","x","stack","deathMessage","ticks","isDead","parseCode","validateCode","world","_this","cmd","codeArray","line","error","mutator","bot","args","die","msg","console","log","_this2","valid","validateLine","type","ins","argNums","includes","ad","oneValid","givenArg","optional","match","vfunc","vaild","lineNum","split","trim","toUpperCase","startsWith","text","symbol","a","replace","applySugar","argTypes","X","NUM","isNumeric","TOP","POP","EXP","MARK","letters","letter","reduce","PUSH","writeValue","parseInt","pop","_ref2","_ref3","LINE","_ref4","TEQ","_ref5","TNE","_ref6","TLT","_ref7","TGT","_ref8","NOOP","_ref9","SWAP","_ref10","FORK","_ref11","_world$addBot","cl","addBot","_defineProperty","JUMP","_ref12","CALL","_ref13","RET","_ref14","TJMP","_ref15","FJMP","_ref16","ADDI","_ref17","MULI","_ref18","SUBI","_ref19","DIVI","_ref20","Math","floor","MODI","_ref21","DUPL","_ref22","_ref23","val","toString","Number","parseFloat","SET_USER_OBJECT","SET_USERNAME","SET_BOTS","ADD_BOT","UPDATE_BOT","RUN_TICK","RESET_BOTS","RUN_10","setUserObject","user","types","payload","setUsername","asnycDemo","username","dispatch","getState","setTimeout","setBots","updateBot","run10","number","arguments","undefined","resetBots","ActionCreators","assign","botsActions","userActions","Spacer","React","Component","react_default","createElement","className","style","width","props","w","height","h","BotData","title","reverse","BotDisplay","PureComponent","instruction","lines","getClassName_default","_styleModuleImportMap","handleMissingStyleName","Spacer_Spacer_Spacer","lib_default","onChange","e","target","BotData_BotData_BotData","BotList","clearInterval","setInterval","onClick","doTick","values","BotDisplay_BotDisplay_BotDisplay","DBotList","connect","state","bindActionCreators","debounceRender","leading","maxWait","AppContainer","withRouter","AppContainer_classCallCheck","AppContainer_possibleConstructorReturn","AppContainer_getPrototypeOf","AppContainer_styleModuleImportMap","components_BotList_BotList","createReducer","initialState","handlers","action","_createReducer","GlobWorld","toJSON","bots_defineProperty","bots_createReducer","reset","combineReducers","userReducer","botsReducer","loggerMiddleware","createLogger","predicate","enhancer","store","compose","applyMiddleware","thunkMiddleware","createStore","reducer","ReactDOM","render","es","react_router_dom","document","getElementById","InputField","main","codeWrap","lineNums","currentIns","row","noFlex"],"mappings":"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","file":"js/main-09b75ef36d9f4f8e1db5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/stackbots/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([153,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const CPU = require(\"./cpu\");\n\nclass World {\n  constructor({ code: code }) {\n    this.bots = [new CPU({ code: code, id: 0 })];\n  }\n  runTick() {\n    let botCount = this.bots.length;\n    for (var i = 0; i < botCount; i++) {\n      this.bots[i].runTick(this);\n    }\n  }\n  addBot(data) {\n    this.bots.push(new CPU({ ...data, id: this.bots.length }));\n  }\n  updateCode(id, code) {\n    this.bots.find(b => b.id == id).updateCode(code);\n  }\n  reset() {\n    this.bots = this.bots\n      .filter(b => !b.isTemp)\n      .map(b => {\n        b.resetBot();\n        return b;\n      });\n  }\n  toJSON() {\n    return { botCount: this.bots.length };\n  }\n}\n\nmodule.exports = World;\n","const instructions = require(\"./instructions\");\n\nclass CPU {\n  constructor({ id, code, room, x, stack, i, deathMessage, isTemp }) {\n    this.id = id;\n    this.code = code || \"\";\n    this.x = x || 0;\n    this.room = room || 0;\n    this.stack = stack || [];\n    this.i = i || 0;\n    this.ticks = 0;\n    this.deathMessage = deathMessage || \"\";\n    this.isDead = false;\n    this.isTemp = isTemp || false;\n    this.parseCode();\n    this.validateCode();\n  }\n  resetBot() {\n    this.x = 0;\n    this.room = 0;\n    this.i = 0;\n    this.ticks = 0;\n    this.isDead = false;\n    this.deathMessage = \"\";\n    this.stack = [];\n  }\n  updateCode(code) {\n    this.code = code || \"\";\n    this.parseCode();\n    this.validateCode();\n  }\n  runTick(world) {\n    if (this.isDead) {\n      return;\n    }\n\n    let cmd = this.codeArray.find(l => l.line == this.i + 1);\n    if (!cmd) {\n      this.die(\"Out of instructions\");\n      return;\n    }\n    this.ticks++;\n    let ins = instructions[cmd.cmd];\n    let error = ins.mutator({ bot: this, args: cmd.args, world: world });\n    if (error) {\n      this.die(error);\n    }\n  }\n  toJSON() {\n    return {\n      id: this.id,\n      code: this.code,\n      x: this.x,\n      room: this.room,\n      stack: this.stack,\n      i: this.i,\n      ticks: this.ticks,\n      deathMessage: this.deathMessage,\n      isDead: this.isDead,\n      isTemp: this.isTemp,\n      codeArray: this.codeArray\n    };\n  }\n  die(msg) {\n    this.isDead = true;\n    this.deathMessage = msg;\n    console.log(\"BOT DIED\", msg);\n  }\n  validateCode() {\n    let valid = true;\n    this.codeArray = this.codeArray.map(line => {\n      line.valid = this.validateLine(line);\n      return line;\n    });\n  }\n  validateLine(line) {\n    if (line.type == \"blank\") {\n      return true;\n    }\n    let ins = instructions[line.cmd];\n    if (!ins) {\n      return false;\n    }\n    //validate arguments.\n    if (!ins.argNums.includes(line.args.length)) {\n      return false;\n    }\n\n    let valid = true;\n    ins.args.map((ad, i) => {\n      let oneValid = false;\n      let givenArg = line.args[i];\n      if (!ad.optional && !givenArg) {\n        vaild = false;\n        return;\n      }\n      if (ad.optional && !givenArg) {\n        return;\n      }\n      ad.match.map(vfunc => {\n        if (vfunc(givenArg) == true) {\n          oneValid = true;\n        }\n      });\n      if (!oneValid) {\n        valid = false;\n      }\n    });\n    return valid;\n  }\n  parseCode() {\n    let lineNum = 0;\n    this.codeArray = this.code.split(\"\\n\").map((l, i) => {\n      l = l.trim().toUpperCase();\n      if (l == \"\" || l.startsWith(\";\")) {\n        return { type: \"blank\" };\n      }\n      lineNum++;\n      l = l.split(\";\")[0].trim();\n      l = applySugar(l);\n      let c = l.split(\" \");\n\n      return {\n        type: \"code\",\n        cmd: c[0],\n        text: l,\n        args: c.slice(1) || [],\n        line: lineNum\n      };\n    });\n  }\n}\n\nmodule.exports = CPU;\n\nfunction applySugar(text) {\n  if (\n    text.startsWith(\"TEST\") &&\n    (text.includes(\"<\") ||\n      text.includes(\">\") ||\n      text.includes(\"=\") ||\n      text.includes(\"!=\"))\n  ) {\n    let cmd = \"\";\n    let symbol = \"\";\n    if (text.includes(\"<\")) {\n      symbol = \"<\";\n      cmd = \"TLT\";\n    }\n    if (text.includes(\">\")) {\n      symbol = \">\";\n      cmd = \"TGT\";\n    }\n    if (text.includes(\"=\")) {\n      symbol = \"=\";\n      cmd = \"TEQ\";\n    }\n    if (text.includes(\"!=\")) {\n      symbol = \"!=\";\n      cmd = \"TNE\";\n    }\n\n    let t = text.split(\" \").filter(a => a != \"\");\n    if (!t[3]) {\n      if (!t[1].split(symbol)[0] || !t[1].split(symbol)[1]) {\n        return text;\n      }\n      return cmd + \" \" + t[1].split(symbol)[0] + \" \" + t[1].split(symbol)[1];\n    }\n    return cmd + \" \" + t[1] + \" \" + t[3];\n  }\n  if (text == \"FLIP\") {\n    return \"SWAP\";\n  }\n  if (text.startsWith(\"REPL\")) {\n    return text.replace(\"REPL\",\"FORK\");\n  }\n  return text;\n}\n","let argTypes = {\n  X: a => {\n    return a == \"X\";\n  },\n  NUM: a => {\n    return isNumeric(a);\n  },\n  TOP: a => {\n    return a == \"TOP\";\n  },\n  POP: a => {\n    return a == \"POP\";\n  },\n  EXP: a => {\n    //console.log(a);\n    return (\n      a.includes(\"&gt;\") ||\n      a.includes(\"=\") ||\n      a.includes(\">\") ||\n      a.includes(\"!=\")\n    );\n  },\n  MARK: a => {\n    let letters = \"abcdefghijklmnopqrstuvwxyz0123456789\"\n      .toUpperCase()\n      .split(\"\");\n    return a\n      .split(\"\")\n      .map(letter => letters.includes(letter))\n      .reduce((a, b) => a && b);\n  }\n};\n\n//[argTypes.X, argTypes.TOP, argTypes.POP, argTypes.NUM]\n\nlet instructions = {\n  PUSH: {\n    cmd: \"PUSH\",\n    argNums: [1],\n    args: [\n      {\n        match: [argTypes.X, argTypes.TOP, argTypes.POP, argTypes.NUM]\n      }\n    ],\n    mutator: ({ bot, args, world }) => {\n      let writeValue = bot.x; //default.\n      getVal: {\n        if (isNumeric(args[0])) {\n          //Get from int\n          writeValue = parseInt(args[0]);\n          break getVal;\n        }\n        if (bot.stack.length == 0) {\n          return \"Can not read from empty stack.\";\n        }\n        if (args[0] == \"POP\") {\n          //Get from POP\n          writeValue = bot.stack.pop();\n          break getVal;\n        }\n        if (args[0] == \"TOP\") {\n          //Get from x\n          writeValue = bot.stack[bot.stack.length - 1];\n          break getVal;\n        }\n      }\n      bot.stack.push(writeValue);\n      bot.i++;\n    }\n  },\n  POP: {\n    cmd: \"POP\",\n    argNums: [0, 1],\n    args: [{ match: [argTypes.X], optional: true }],\n    mutator: ({ bot, args, world }) => {\n      if (bot.stack.length == 0) {\n        return \"Can't pop empty stack\";\n      }\n      if (args[0]) {\n        //want to store in x\n        bot.x = bot.stack.pop();\n      } else {\n        //discard\n        bot.stack.pop();\n      }\n      bot.i++;\n    }\n  },\n  TOP: {\n    cmd: \"TOP\",\n    argNums: [1],\n    args: [{ match: [argTypes.X] }],\n    mutator: ({ bot, args, world }) => {\n      if (bot.stack.length == 0) {\n        return \"Can't read from empty stack.\";\n      }\n      bot.x = bot.stack[bot.stack.length - 1];\n      bot.i++;\n    }\n  },\n  LINE: {\n    cmd: \"LINE\",\n    argNums: [0],\n    args: [],\n    mutator: ({ bot, args, world }) => {\n      bot.stack.push(bot.i + 1);\n      bot.i++;\n    }\n  },\n  TEQ: {\n    cmd: \"TEQ\",\n    argNums: [0, 2],\n    args: [\n      {\n        optional: true,\n        match: [argTypes.X, argTypes.TOP, argTypes.POP, argTypes.NUM]\n      },\n      {\n        optional: true,\n        match: [argTypes.X, argTypes.TOP, argTypes.POP, argTypes.NUM]\n      }\n    ],\n    mutator: ({ bot, args, world }) => {\n      //default:\n      if (!args[0]) {\n        args[0] = \"POP\";\n        args[1] = \"POP\";\n      }\n      let a = null;\n      let b = null;\n      //Get first item:\n      getVal1: {\n        if (args[0] == \"X\") {\n          a = bot.x;\n          break getVal1;\n        }\n        if (isNumeric(args[0])) {\n          //Get from int\n          a = parseInt(args[0]);\n          break getVal1;\n        }\n        if (bot.stack.length == 0) {\n          return \"Can not read from empty stack.\";\n        }\n        if (args[0] == \"POP\") {\n          //Get from POP\n          a = bot.stack.pop();\n          break getVal1;\n        }\n        if (args[0] == \"TOP\") {\n          //Get from x\n          a = bot.stack[bot.stack.length - 1];\n          break getVal1;\n        }\n      }\n\n      getVal2: {\n        if (args[1] == \"X\") {\n          b = bot.x;\n          break getVal2;\n        }\n        if (isNumeric(args[1])) {\n          //Get from int\n          b = parseInt(args[1]);\n          break getVal2;\n        }\n        if (bot.stack.length == 0) {\n          return \"Can not read from empty stack.\";\n        }\n        if (args[1] == \"POP\") {\n          //Get from POP\n          b = bot.stack.pop();\n          break getVal2;\n        }\n        if (args[1] == \"TOP\") {\n          //Get from x\n          b = bot.stack[bot.stack.length - 1];\n          break getVal2;\n        }\n      }\n      //console.log(\"doin.\");\n      //console.log(args[0], args[1]);\n      //console.log(a, b);\n      bot.stack.push(a == b ? 1 : 0);\n      bot.i++;\n    }\n  },\n\n  TNE: {\n    cmd: \"TNE\",\n    argNums: [0, 2],\n    args: [\n      {\n        optional: true,\n        match: [argTypes.X, argTypes.TOP, argTypes.POP, argTypes.NUM]\n      },\n      {\n        optional: true,\n        match: [argTypes.X, argTypes.TOP, argTypes.POP, argTypes.NUM]\n      }\n    ],\n    mutator: ({ bot, args, world }) => {\n      //default:\n      if (!args[0]) {\n        args[0] = \"POP\";\n        args[1] = \"POP\";\n      }\n      let a = null;\n      let b = null;\n      //Get first item:\n      getVal1: {\n        if (args[0] == \"X\") {\n          a = bot.x;\n          break getVal1;\n        }\n        if (isNumeric(args[0])) {\n          //Get from int\n          a = parseInt(args[0]);\n          break getVal1;\n        }\n        if (bot.stack.length == 0) {\n          return \"Can not read from empty stack.\";\n        }\n        if (args[0] == \"POP\") {\n          //Get from POP\n          a = bot.stack.pop();\n          break getVal1;\n        }\n        if (args[0] == \"TOP\") {\n          //Get from x\n          a = bot.stack[bot.stack.length - 1];\n          break getVal1;\n        }\n      }\n\n      getVal2: {\n        if (args[1] == \"X\") {\n          b = bot.x;\n          break getVal2;\n        }\n        if (isNumeric(args[1])) {\n          //Get from int\n          b = parseInt(args[1]);\n          break getVal2;\n        }\n        if (bot.stack.length == 0) {\n          return \"Can not read from empty stack.\";\n        }\n        if (args[1] == \"POP\") {\n          //Get from POP\n          b = bot.stack.pop();\n          break getVal2;\n        }\n        if (args[1] == \"TOP\") {\n          //Get from x\n          b = bot.stack[bot.stack.length - 1];\n          break getVal2;\n        }\n      }\n      //console.log(\"doin.\");\n      //console.log(args[0], args[1]);\n      //console.log(a, b);\n      bot.stack.push(a == b ? 0 : 1);\n      bot.i++;\n    }\n  },\n\n  TLT: {\n    cmd: \"TLT\",\n    argNums: [0, 2],\n    args: [\n      {\n        optional: true,\n        match: [argTypes.X, argTypes.TOP, argTypes.POP, argTypes.NUM]\n      },\n      {\n        optional: true,\n        match: [argTypes.X, argTypes.TOP, argTypes.POP, argTypes.NUM]\n      }\n    ],\n    mutator: ({ bot, args, world }) => {\n      //default:\n      if (!args[0]) {\n        args[0] = \"POP\";\n        args[1] = \"POP\";\n      }\n      let a = null;\n      let b = null;\n      //Get first item:\n      getVal1: {\n        if (args[0] == \"X\") {\n          a = bot.x;\n          break getVal1;\n        }\n        if (isNumeric(args[0])) {\n          //Get from int\n          a = parseInt(args[0]);\n          break getVal1;\n        }\n        if (bot.stack.length == 0) {\n          return \"Can not read from empty stack.\";\n        }\n        if (args[0] == \"POP\") {\n          //Get from POP\n          a = bot.stack.pop();\n          break getVal1;\n        }\n        if (args[0] == \"TOP\") {\n          //Get from x\n          a = bot.stack[bot.stack.length - 1];\n          break getVal1;\n        }\n      }\n\n      getVal2: {\n        if (args[1] == \"X\") {\n          b = bot.x;\n          break getVal2;\n        }\n        if (isNumeric(args[1])) {\n          //Get from int\n          b = parseInt(args[1]);\n          break getVal2;\n        }\n        if (bot.stack.length == 0) {\n          return \"Can not read from empty stack.\";\n        }\n        if (args[1] == \"POP\") {\n          //Get from POP\n          b = bot.stack.pop();\n          break getVal2;\n        }\n        if (args[1] == \"TOP\") {\n          //Get from x\n          b = bot.stack[bot.stack.length - 1];\n          break getVal2;\n        }\n      }\n      //console.log(\"doin.\");\n      //console.log(args[0], args[1]);\n      //console.log(a, b);\n      bot.stack.push(a < b ? 1 : 0);\n      bot.i++;\n    }\n  },\n\n  TGT: {\n    cmd: \"TGT\",\n    argNums: [0, 2],\n    args: [\n      {\n        optional: true,\n        match: [argTypes.X, argTypes.TOP, argTypes.POP, argTypes.NUM]\n      },\n      {\n        optional: true,\n        match: [argTypes.X, argTypes.TOP, argTypes.POP, argTypes.NUM]\n      }\n    ],\n    mutator: ({ bot, args, world }) => {\n      //default:\n      if (!args[0]) {\n        args[0] = \"POP\";\n        args[1] = \"POP\";\n      }\n      let a = null;\n      let b = null;\n      //Get first item:\n      getVal1: {\n        if (args[0] == \"X\") {\n          a = bot.x;\n          break getVal1;\n        }\n        if (isNumeric(args[0])) {\n          //Get from int\n          a = parseInt(args[0]);\n          break getVal1;\n        }\n        if (bot.stack.length == 0) {\n          return \"Can not read from empty stack.\";\n        }\n        if (args[0] == \"POP\") {\n          //Get from POP\n          a = bot.stack.pop();\n          break getVal1;\n        }\n        if (args[0] == \"TOP\") {\n          //Get from x\n          a = bot.stack[bot.stack.length - 1];\n          break getVal1;\n        }\n      }\n\n      getVal2: {\n        if (args[1] == \"X\") {\n          b = bot.x;\n          break getVal2;\n        }\n        if (isNumeric(args[1])) {\n          //Get from int\n          b = parseInt(args[1]);\n          break getVal2;\n        }\n        if (bot.stack.length == 0) {\n          return \"Can not read from empty stack.\";\n        }\n        if (args[1] == \"POP\") {\n          //Get from POP\n          b = bot.stack.pop();\n          break getVal2;\n        }\n        if (args[1] == \"TOP\") {\n          //Get from x\n          b = bot.stack[bot.stack.length - 1];\n          break getVal2;\n        }\n      }\n      //console.log(\"doin.\");\n      //console.log(args[0], args[1]);\n      //console.log(a, b);\n      bot.stack.push(a > b ? 1 : 0);\n      bot.i++;\n    }\n  },\n  NOOP: {\n    cmd: \"NOOP\",\n    argNums: [0],\n    args: [],\n    mutator: ({ bot, args, world }) => {\n      bot.i++;\n    }\n  },\n  SWAP: {\n    cmd: \"SWAP\",\n    argNums: [0],\n    args: [],\n    mutator: ({ bot, args, world }) => {\n      if (bot.stack.length < 2) {\n        return \"Not enough items for swapping.\";\n      }\n      let a = bot.stack.pop();\n      let b = bot.stack.pop();\n      bot.stack.push(a);\n      bot.stack.push(b);\n      bot.i++;\n    }\n  },\n  FORK: {\n    cmd: \"FORK\",\n    argNums: [1],\n    args: [{ match: [argTypes.MARK] }],\n    mutator: ({ bot, args, world }) => {\n      let m = args[0];\n      //find line;\n      let l = null;\n      l = bot.codeArray\n        .filter(cl => cl.type != \"blank\")\n        .find(cl => {\n          return cl.args[0] == m;\n        });\n      //console.log(\"FOUND JUMP!\", l);\n      if (!l) {\n        return \"MARK not found.\";\n      }\n      world.addBot({\n        code: bot.code,\n        x: bot.x,\n        room: bot.room,\n        stack: bot.stack.slice(),\n        i: l.line,\n        x: bot.x,\n        isTemp: true\n      });\n      bot.i++;\n    }\n  },\n  JUMP: {\n    cmd: \"JUMP\",\n    argNums: [1],\n    args: [{ match: [argTypes.MARK] }],\n    mutator: ({ bot, args, world }) => {\n      let m = args[0];\n      //find line;\n      let l = null;\n      l = bot.codeArray\n        .filter(cl => cl.type != \"blank\")\n        .find(cl => {\n          return cl.args[0] == m;\n        });\n      //console.log(\"FOUND JUMP!\", l);\n      if (!l) {\n        return \"MARK not found.\";\n      }\n      bot.i = l.line;\n    }\n  },\n  CALL: {\n    cmd: \"CALL\",\n    argNums: [1],\n    args: [{ match: [argTypes.MARK] }],\n    mutator: ({ bot, args, world }) => {\n      let m = args[0];\n      //find line;\n      let l = null;\n      l = bot.codeArray\n        .filter(cl => cl.type != \"blank\")\n        .find(cl => {\n          return cl.cmd == \"MARK\" && cl.args[0] == m;\n        });\n      //console.log(\"FOUND JUMP!\", l);\n      if (!l) {\n        return \"MARK not found.\";\n      }\n      bot.stack.push(bot.i + 1);\n      bot.i = l.line;\n    }\n  },\n  RET: {\n    cmd: \"RET\",\n    argNums: [0],\n    args: [],\n    mutator: ({ bot, args, world }) => {\n      if (bot.stack.length == 0) {\n        return \"Nowhere to return to.\";\n      }\n      let a = bot.stack.pop();\n      bot.i = a;\n    }\n  },\n  TJMP: {\n    cmd: \"TJMP\",\n    argNums: [1],\n    args: [],\n    mutator: ({ bot, args, world }) => {\n      if (bot.stack.length == 0) {\n        return \"Can not read from empty stack\";\n      }\n      if (bot.stack[bot.stack.length - 1] == 0) {\n        //dont jump;\n        bot.i++;\n        return;\n      }\n      let m = args[0];\n      //find line;\n      let l = null;\n      l = bot.codeArray\n        .filter(cl => cl.type != \"blank\")\n        .find(cl => {\n          return cl.args[0] == m;\n        });\n      //console.log(\"FOUND JUMP!\", l);\n      if (!l) {\n        return \"MARK not found.\";\n      }\n      bot.i = l.line;\n    }\n  },\n  FJMP: {\n    cmd: \"FJMP\",\n    argNums: [1],\n    args: [],\n    mutator: ({ bot, args, world }) => {\n      if (bot.stack.length !== 0 && bot.stack[bot.stack.length - 1] != 0) {\n        bot.i++;\n        return;\n      }\n      let m = args[0];\n      //find line;\n      let l = null;\n      l = bot.codeArray\n        .filter(cl => cl.type != \"blank\")\n        .find(cl => {\n          return cl.args[0] == m;\n        });\n      //console.log(\"FOUND JUMP!\", l);\n      if (!l) {\n        return \"MARK not found.\";\n      }\n      bot.i = l.line;\n    }\n  },\n  ADDI: {\n    cmd: \"ADDI\",\n    argNums: [0],\n    args: [],\n    mutator: ({ bot, args, world }) => {\n      if (bot.stack.length < 2) {\n        return \"Not enough items for math.\";\n      }\n      let a = bot.stack.pop();\n      let b = bot.stack.pop();\n      if (!(isNumeric(a) && isNumeric(b))) {\n        return \"Can't do maths on string.\";\n      }\n      bot.stack.push(a + b);\n      bot.i++;\n    }\n  },\n  MULI: {\n    cmd: \"MULI\",\n    argNums: [0],\n    args: [],\n    mutator: ({ bot, args, world }) => {\n      if (bot.stack.length < 2) {\n        return \"Not enough items for math.\";\n      }\n      let a = bot.stack.pop();\n      let b = bot.stack.pop();\n      if (!(isNumeric(a) && isNumeric(b))) {\n        return \"Can't do maths on string.\";\n      }\n      bot.stack.push(a * b);\n      bot.i++;\n    }\n  },\n  SUBI: {\n    cmd: \"SUBI\",\n    argNums: [0],\n    args: [],\n    mutator: ({ bot, args, world }) => {\n      if (bot.stack.length < 2) {\n        return \"Not enough items for math.\";\n      }\n      let a = bot.stack.pop();\n      let b = bot.stack.pop();\n      if (!(isNumeric(a) && isNumeric(b))) {\n        return \"Can't do maths on string.\";\n      }\n      bot.stack.push(a - b);\n      bot.i++;\n    }\n  },\n  DIVI: {\n    cmd: \"DIVI\",\n    argNums: [0],\n    args: [],\n    mutator: ({ bot, args, world }) => {\n      if (bot.stack.length < 2) {\n        return \"Not enough items for math.\";\n      }\n      let a = bot.stack.pop();\n      let b = bot.stack.pop();\n      if (!(isNumeric(a) && isNumeric(b))) {\n        return \"Can't do maths on string.\";\n      }\n      bot.stack.push(Math.floor(a / b));\n      bot.i++;\n    }\n  },\n  MODI: {\n    cmd: \"MODI\",\n    argNums: [0],\n    args: [],\n    mutator: ({ bot, args, world }) => {\n      if (bot.stack.length < 2) {\n        return \"Not enough items for math.\";\n      }\n      let a = bot.stack.pop();\n      let b = bot.stack.pop();\n      if (!(isNumeric(a) && isNumeric(b))) {\n        return \"Can't do maths on string.\";\n      }\n      bot.stack.push(a % b);\n      bot.i++;\n    }\n  },\n  DUPL: {\n    cmd: \"DUPL\",\n    argNums: [0],\n    args: [],\n    mutator: ({ bot, args, world }) => {\n      if (bot.stack.length == 0) {\n        return \"Can't read from empty stack.\";\n      }\n      bot.stack.push(bot.stack[bot.stack.length - 1]);\n      bot.i++;\n    }\n  },\n  MARK: {\n    cmd: \"MARK\",\n    argNums: [1],\n    args: [{ match: [argTypes.MARK] }],\n    mutator: ({ bot, args, world }) => {\n      bot.i++;\n    }\n  }\n};\n\nmodule.exports = instructions;\n\nfunction isNumeric(val) {\n  val = val.toString();\n  return (\n    Number(parseFloat(val)) == val &&\n    !val.split(\"\").includes(\"E\") &&\n    !val.split(\"\").includes(\".\")\n  );\n}\n","//Action types\nexport const SET_USER_OBJECT = \"SET_USER_OBJECT\";\nexport const SET_USERNAME = \"SET_USERNAME\";\n\nexport const SET_BOTS = \"SET_BOTS\";\nexport const ADD_BOT = \"ADD_BOT\";\nexport const UPDATE_BOT = \"UPDATE_BOT\";\nexport const RUN_TICK = \"RUN_TICK\";\nexport const RESET_BOTS = \"RESET_BOTS\";\nexport const RUN_10 = \"RUN_10\";\n","import * as types from \"./types\";\n\n//We have to define action types in types.js, here we make them available as functions that can be mapped to props.\n\nexport function setUserObject(user) {\n  return {\n    type: types.SET_USER_OBJECT,\n    payload: user\n  };\n}\n\nexport function setUsername(name) {\n  return {\n    type: types.SET_USERNAME,\n    payload: name\n  };\n}\n\n// asnyc function\nexport function asnycDemo(username) {\n  return (dispatch, getState) => {\n    //fetch some data for example\n    setTimeout(() => {\n      // Dispatch redux function:\n      dispatch(setUsername(username));\n    }, 1000);\n  };\n}\n","import * as types from \"./types\";\n\n//We have to define action types in types.js, here we make them available as functions that can be mapped to props.\n\nexport function setBots(bots) {\n  return {\n    type: types.SET_BOTS,\n    payload: bots\n  };\n}\n\nexport function addBot(bot) {\n  return {\n    type: types.ADD_BOT,\n    payload: bot\n  };\n}\n\nexport function updateBot(id, code) {\n  return {\n    type: types.UPDATE_BOT,\n    payload: { id, code }\n  };\n}\n\nexport function runTick() {\n  return {\n    type: types.RUN_TICK\n  };\n}\n\nexport function run10(number = 10) {\n  return {\n    type: types.RUN_10,\n    payload: number\n  };\n}\n\nexport function resetBots() {\n  return {\n    type: types.RESET_BOTS\n  };\n}\n","import * as userActions from \"./user\";\nimport * as botsActions from \"./bots\";\n\nexport const ActionCreators = Object.assign({}, botsActions, userActions);\n","import React from \"react\";\nimport style from \"./Spacer.less\";\n\nexport default class Spacer extends React.Component {\n  render() {\n    return (\n      <div\n        styleName=\"Spacer\"\n        style={{ width: this.props.w || 0, height: this.props.h || 0 }}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport style from \"./BotData.less\";\n\nexport default class BotData extends React.Component {\n  render() {\n    let bot = this.props.bot;\n    return (\n      <div styleName=\"BotData\">\n        <div styleName=\"row\">\n          <div styleName=\"key\">X</div>\n          <div styleName=\"value\" title={bot.x}>\n            {bot.x}\n          </div>\n        </div>\n        <div styleName=\"row noFlex\">\n          <div styleName=\"key\">Stack</div>\n          <div styleName=\"stack value\" title={bot.x}>\n            {bot.stack\n              .slice()\n              .reverse()\n              .map((b, i) => (\n                <div key={i + \":\" + b}>{b}</div>\n              ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport style from \"./BotDisplay.less\";\nimport Spacer from \"../Spacer/Spacer\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport BotData from \"../BotData/BotData\";\nexport default class BotDisplay extends React.PureComponent {\n  render() {\n    let bot = this.props.bot;\n    let instruction = bot.i;\n\n    //console.log(lines);\n    let lines = bot.codeArray.map((l, i) => {\n      return l.type == \"blank\" ? (\n        <div styleName={\"lineNum\"} key={\"line\" + i}>\n          &nbsp;\n        </div>\n      ) : (\n        <div styleName={\"lineNum\"} key={\"line\" + i}>\n          {l.line}\n          {l.valid && l.line - 1 == instruction && (\n            <div styleName=\"currentIns\" />\n          )}\n          {!l.valid && <div styleName=\"error\" />}\n        </div>\n      );\n    });\n\n    return (\n      <div styleName=\"BotDisplay\">\n        <div styleName=\"title\">\n          Bot #{bot.id} ({this.props.ticks})\n        </div>\n        <Spacer h={4} />\n\n        <div styleName=\"codeWrap\">\n          <div styleName=\"lineNums\">{lines}</div>\n          <TextareaAutosize\n            onChange={e => {\n              this.props.updateBot(bot.id, e.target.value);\n            }}\n            styleName=\"code\"\n            value={bot.code}\n          />\n          <BotData bot={bot} />\n        </div>\n        {bot.isDead && <div styleName=\"deathMsg\">{bot.deathMessage}</div>}\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ActionCreators } from \"redux/actions\";\nimport { bindActionCreators } from \"redux\";\nimport style from \"./BotList.less\";\nimport BotDisplay from \"../BotDisplay/BotDisplay\";\nimport Spacer from \"../Spacer/Spacer\";\n\nimport debounceRender from \"react-debounce-render\";\nclass BotList extends React.Component {\n  doTick() {\n    clearInterval(this.int);\n    this.int = setInterval(() => {\n      this.props.runTick();\n    }, 1000 / 10);\n  }\n  render() {\n    return (\n      <div styleName=\"BotList\">\n        <button\n          onClick={() => {\n            clearInterval(this.int);\n            this.props.runTick();\n          }}\n        >\n          Run tick / Pause\n        </button>\n        <button\n          onClick={() => {\n            clearInterval(this.int);\n            this.props.run10();\n          }}\n        >\n          Run 10\n        </button>\n        <button\n          onClick={() => {\n            this.doTick();\n          }}\n        >\n          Run ticks\n        </button>\n        <button\n          onClick={() => {\n            clearInterval(this.int);\n            this.props.resetBots();\n          }}\n        >\n          Reset\n        </button>\n        <button\n          onClick={() => {\n            this.props.addBot();\n          }}\n        >\n          Add new bot\n        </button>\n        <Spacer h={12} />\n        {Object.values(this.props.bots.bots).map(b => {\n          return (\n            <BotDisplay\n              key={b.id}\n              updateBot={this.props.updateBot}\n              bot={b}\n              ticks={b.ticks}\n              i={b.i}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    bots: state.bots\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(ActionCreators, dispatch);\n}\n\nlet DBotList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(debounceRender(BotList, 1000 / 60, { leading: true, maxWait: 1000 / 8 }));\n\nexport default DBotList;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ActionCreators } from \"redux/actions\";\nimport { bindActionCreators } from \"redux\";\n\nimport InputField from \"components/InputField\";\nimport style from \"./AppContainer.less\";\n\nimport { Route, Link, withRouter, Switch, Redirect } from \"react-router-dom\";\nimport BotList from \"../../components/BotList/BotList\";\nimport { codeToLines } from \"../../components/BotDisplay/BotDisplay\";\n\nconst defaultCode = `;FIBONACCI\nPUSH 0\nDUPL\nPOP X\nPUSH 1\n\nMARK LOOP\nDUPL\nPUSH X\nADDI\nFLIP\nDUPL\nPOP X\nFLIP\nJUMP LOOP`;\n\n@withRouter\n@connect(\n  mapStateToProps,\n  mapDispatchToProps\n)\nclass AppContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    this.props.setBots();\n  }\n\n  render() {\n    return (\n      <div styleName={\"main\"}>\n        <BotList />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(ActionCreators, dispatch);\n}\n\nexport default AppContainer;\n","\nimport AppContainer from './AppContainer';\nexport default AppContainer;\n","export default function createReducer(initialState, handlers) {\n  return function(state = initialState, action) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action);\n    } else {\n      return state;\n    }\n  };\n}\n","//Reducers: Manages data, state\nimport createReducer from \"../lib/createReducer\";\nimport * as types from \"../actions/types\";\nimport { combineReducers } from \"redux\";\n\n//Define name and default value\nexport const user = createReducer(\n  { username: \"Anon\" },\n  {\n    [types.SET_USER_OBJECT](state, action) {\n      return { ...action.payload };\n    },\n    [types.SET_USERNAME](state, action) {\n      return { ...state, username: action.payload };\n    }\n  }\n);\n","//Reducers: Manages data, state\nimport createReducer from \"../lib/createReducer\";\nimport * as types from \"../actions/types\";\nimport { combineReducers } from \"redux\";\n\nimport * as World from \"../../../standalone/world\";\n\nlet defaultBot = {\n  isValid: true,\n  deathMessage: \"\",\n  isDead: false,\n  x: 0,\n  temp: false,\n  ticks: 0,\n  i: 0\n};\nlet defaultCode = `;FIBONACCI\nPUSH 0\nDUPL\nPOP X\nPUSH 1\n\nMARK LOOP\nDUPL\nPUSH X\nADDI\nSWAP\nDUPL\nPOP X\nSWAP\nJUMP LOOP`;\nconst GlobWorld = new World({ code: defaultCode });\nexport const bots = createReducer(\n  {\n    world: GlobWorld.toJSON(),\n    bots: GlobWorld.bots.map(b => b.toJSON())\n  },\n  {\n    [types.SET_BOTS](state, action) {\n      return state;\n    },\n    [types.RESET_BOTS](state, action) {\n      GlobWorld.reset();\n      return {\n        world: GlobWorld.toJSON(),\n        bots: GlobWorld.bots.map(b => b.toJSON())\n      };\n      return state;\n    },\n    [types.ADD_BOT](state, action) {\n      GlobWorld.addBot();\n      return {\n        world: GlobWorld.toJSON(),\n        bots: GlobWorld.bots.map(b => b.toJSON())\n      };\n    },\n    [types.UPDATE_BOT](state, action) {\n      GlobWorld.updateCode(action.payload.id, action.payload.code);\n      return {\n        world: GlobWorld.toJSON(),\n        bots: GlobWorld.bots.map(b => b.toJSON())\n      };\n    },\n    [types.RUN_TICK](state, action) {\n      GlobWorld.runTick();\n      return {\n        world: GlobWorld.toJSON(),\n        bots: GlobWorld.bots.map(b => b.toJSON())\n      };\n    },\n    [types.RUN_10](state, action) {\n      for (var i = 0; i < action.payload; i++) {\n        GlobWorld.runTick();\n      }\n      return {\n        world: GlobWorld.toJSON(),\n        bots: GlobWorld.bots.map(b => b.toJSON())\n      };\n    }\n  }\n);\n\nfunction arrayRotate(arr, count) {\n  count -= arr.length * Math.floor(count / arr.length);\n  arr.push.apply(arr, arr.splice(0, count));\n  return arr;\n}\n","import { combineReducers } from \"redux\";\n\nimport * as userReducer from \"./user\";\nimport * as botsReducer from \"./bots\";\n\nexport default combineReducers(Object.assign({}, userReducer, botsReducer));\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\n\nimport reducer from \"./reducers\";\n\nconst loggerMiddleware = createLogger({\n  predicate: (getState, action) => !true\n});\n\nfunction configureStorage(initialState) {\n  let enhancer = compose(applyMiddleware(thunkMiddleware, loggerMiddleware));\n  let store = createStore(reducer, initialState, enhancer);\n  return store;\n}\n\nlet store = configureStorage({});\n\nexport default store;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport AppContainer from \"./containers/AppContainer\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\n\nconst render = Component => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <Component />\n      </Router>\n    </Provider>,\n    document.getElementById(\"app\")\n  );\n};\n\nrender(AppContainer);\n\nif (module.hot) {\n  module.hot.accept(\"./containers/AppContainer\", () => {\n    var NextRootContainer = require(\"./containers/AppContainer\").default;\n    render(NextRootContainer);\n  });\n}\n","// removed by extract-text-webpack-plugin\nmodule.exports = {\"InputField\":\"InputField__2iVjL\"};","// removed by extract-text-webpack-plugin\nmodule.exports = {\"main\":\"main__1Qz2V\"};","// removed by extract-text-webpack-plugin\nmodule.exports = {\"BotList\":\"BotList__2ut7p\"};","// removed by extract-text-webpack-plugin\nmodule.exports = {\"BotDisplay\":\"BotDisplay__ORyTn\",\"code\":\"code__xeD25\",\"codeWrap\":\"codeWrap__2bNcI\",\"lineNum\":\"lineNum__3PcSy\",\"lineNums\":\"lineNums__1STtN\",\"currentIns\":\"currentIns__1I8GG\",\"error\":\"error__1Pbcj\"};","// removed by extract-text-webpack-plugin\nmodule.exports = {\"Spacer\":\"Spacer__mCvPQ\"};","// removed by extract-text-webpack-plugin\nmodule.exports = {\"BotData\":\"BotData__2adJ-\",\"row\":\"row__hobll\",\"noFlex\":\"noFlex__2Y1Lu\",\"key\":\"key__3Tu1C\",\"value\":\"value__1LF1j\",\"stack\":\"stack__1Kz6o\"};"],"sourceRoot":""}